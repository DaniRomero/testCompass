{
  "openapi": "3.0.1",
  "info": {
      "title": "Current Account",
      "description": "This service domain orchestrates a consumer current account. The typical range of services and fees covers payments from and scheduled and ad-hoc",
      "version": "v1.20240607"
  },
  "paths": {
      "/CurrentAccount/AccountNumber/Initiate": {
          "post": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Books the account number",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/GenerateAcctNumRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GenerateAcctNumResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/AccountBooking/Initiate": {
          "post": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Books the account with the given account number",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/CurrentAccountInitiateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DepositAccountBookingLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/CurrentAccountInitiateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/IssuedDevice/DebitCardNumber/Initiate": {
          "post": {
              "tags": [
                  "Issued Device (Debit Card)"
              ],
              "summary": "Book card number",
              "description": "Book a card number",
              "operationId": "InitiateIssuedDeviceNumber",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/GenerateDeviceNumRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssuedDeviceCardNumberInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GenerateDeviceNumResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/IssuedDevice/DebitCardBooking/Initiate": {
          "post": {
              "tags": [
                  "Issued Device (Debit Card)"
              ],
              "summary": "Issue device for the given credit card number",
              "description": "Issue device for the given credit card number",
              "operationId": "InitiateIssuedDevice",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/IssuedDeviceInitiateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssuedDeviceInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/IssuedDeviceInitiateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/IssuedDevice/DebitCardActivation/Initiate": {
          "post": {
              "tags": [
                  "Issued Device (Debit Card)"
              ],
              "summary": "Activate given debit card number and assign PIN",
              "description": "Activate given debit card number and assign PIN",
              "operationId": "DebitCardActivation",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/CardNumber"
                  },
                  {
                      "$ref": "#/components/parameters/CardPIN"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ActivateCardLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/DebitCardActivationResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/IssuedDevice/urn:CardNumber:Headers.CardNumber/Retrieve": {
          "get": {
              "tags": [
                  "Issued Device (Debit Card)"
              ],
              "summary": "Returns all device/debit card details",
              "description": "This API returns all device/debit card details like demographics information along with respective card details",
              "operationId": "DebitCardRetrieve",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/CardNumber"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCardRelatedCustomersLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/CardRelatedCustomersIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/IssuedDevice/urn:CurrentAcctId:Headers.CardAcctId/Retrieve": {
          "get": {
              "tags": [
                  "Issued Device (Debit Card)"
              ],
              "summary": "Returns CARD Account Information",
              "description": "This API returns CARD account information",
              "operationId": "RetrieveCARDaccount",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/CardAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/CardAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/CardPANId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetCARDAccountInfoLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetCardAcctInqResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Transactions/Retrieve": {
          "get": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Returns transactions",
              "description": "This API returns transactions for the given date range. When connecting to Evertec CORE following parameters are required x-AuthType, x-AuthCredentials, CustPermId, and CustAcctType. For pagination, Evertec CORE requires RecCursor and FIS CORE requires PageNumber.",
              "operationId": "Retrieve",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/StartDt"
                  },
                  {
                      "$ref": "#/components/parameters/EndDt"
                  },
                  {
                      "$ref": "#/components/parameters/ChkNumStart"
                  },
                  {
                      "$ref": "#/components/parameters/ChkNumEnd"
                  },
                  {
                      "$ref": "#/components/parameters/TrnCd"
                  },
                  {
                      "$ref": "#/components/parameters/Sort"
                  },
                  {
                      "$ref": "#/components/parameters/RecCountLimit"
                  },
                  {
                      "$ref": "#/components/parameters/PageNumber"
                  },
                  {
                      "$ref": "#/components/parameters/RecCursor"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeRead}"
                          },
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetDPTransactionsLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetTransactionsResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Retrieve": {
          "get": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Returns Current Account Information",
              "description": "This API returns current account information",
              "operationId": "RetrieveAccount",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetCurrentAccountInfoLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetAcctInqResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Features/Retrieve": {
          "get": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "This service domain orchestrates a consumer checking/demand deposit account. The typical range of services and fees covers payments and deposits, standing orders, sweeps, liens, check and debit card access.\\n\\nThis REST service is a merge candidate, which retrieves the account details for the given IdaAccount/ UsavAcct",
              "description": "This API returns current account information",
              "operationId": "RetrieveAccountFeatures",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetCurrentAccountFeaturesLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetAcctFeaturesResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Statements/Retrieve": {
          "get": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Retrieves all the statements associated with the deposit account",
              "description": "This API retrieves all the statements associated with the deposit account",
              "operationId": "RetrieveAccountStatments",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/LastStmtDt"
                  },
                  {
                      "$ref": "#/components/parameters/StartDt"
                  },
                  {
                      "$ref": "#/components/parameters/EndDt"
                  },
                  {
                      "$ref": "#/components/parameters/IncDetail"
                  },
                  {
                      "$ref": "#/components/parameters/Sort"
                  },
                  {
                      "$ref": "#/components/parameters/RecCountLimit"
                  },
                  {
                      "$ref": "#/components/parameters/PageNumber"
                  },
                  {
                      "$ref": "#/components/parameters/RecCursor"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetCurrentAccountStatementsLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetAcctStatmentResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Payments/StopCheck/Initiate": {
          "post": {
              "tags": [
                  "Current Account Payments"
              ],
              "summary": "Add a stop payment order for a check",
              "description": "This API adds a stop payment order for a check",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/StopCheckPaymentRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StopCheckInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/StopCheckPaymentResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Payments/StopCheck/Control": {
          "post": {
              "tags": [
                  "Current Account Payments"
              ],
              "summary": "Reverses a stop payment order for a check",
              "description": "This API reverses a stop payment order for a check",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/StopCheckRefId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/RevStopCheckPaymentRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTRevStopPaymentCheckLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/RevStopCheckPaymentResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Payments/StopCheck/Retrieve": {
          "get": {
              "tags": [
                  "Current Account Payments"
              ],
              "summary": "Provides the account information for a stop Payments inquiry account",
              "description": "This API provides the account information for a stop Payments inquiry account",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/Amount"
                  },
                  {
                      "$ref": "#/components/parameters/ChkNumStart"
                  },
                  {
                      "$ref": "#/components/parameters/ChkNumEnd"
                  },
                  {
                      "$ref": "#/components/parameters/ChkNum"
                  },
                  {
                      "$ref": "#/components/parameters/CreateRefId"
                  },
                  {
                      "$ref": "#/components/parameters/Requestor"
                  },
                  {
                      "$ref": "#/components/parameters/RenewalCt"
                  },
                  {
                      "$ref": "#/components/parameters/Desc"
                  },
                  {
                      "$ref": "#/components/parameters/Name"
                  },
                  {
                      "$ref": "#/components/parameters/OrigDt"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetStopPaymentCheckLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ListStopCheckPaymentResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/Maintenance/Initiate": {
          "post": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Update Deposit Account Information using Account Number",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctStatusCd"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${FisAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DepositAccountMaintenanceLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/CurrentAccountMaintenanceResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/Payments/Xfer/Initiate": {
          "post": {
              "tags": [
                  "Current Account Payments"
              ],
              "summary": "Initiates a transfer through Web Cash Manager for a commercial account.",
              "description": "Initiate a One Time Transfer from a Commercial account",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/XferPaymentRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTXferPaymentLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/XferPaymentResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/CDA/urn:CDAAcctId:Headers.CDAAcctId/Retrieve": {
          "get": {
              "tags": [
                  "Retrieve CDA Account"
              ],
              "summary": "Returns CDA Account Information",
              "description": "This API returns Certificate Of Deposit account information",
              "operationId": "RetrieveCDAAccount",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/CDAAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/CDAAcctType"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EVTGetCDAAccountInfoLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GetCDAAcctInqResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/ESign/Initiate": {
          "post": {
              "tags": [
                  "Current/Saving Account"
              ],
              "summary": "Capture the Esign agreement from customer",
              "description": "This API captures the Esign agreement from customer on a Current/Saving account to allow to use Telepago",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/TaxId"
                  },
                  {
                      "$ref": "#/components/parameters/CardPANId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AccountESignRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AccountESignInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountESignResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Interest/Evaluate": {
          "post": {
              "tags": [
                  "Current/Saving Account"
              ],
              "summary": "Gets interest details on Current/Saving account",
              "description": "This API retrives interest details on a Current/Saving account",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AccountInterestEvaluateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AccountInterestEvaluateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountInterestEvaluateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Adjustments/Initiate": {
          "post": {
              "tags": [
                  "Current/Saving Account"
              ],
              "summary": "Adds an adjustment on Current/Saving account",
              "description": "This API makes an adjustment on a savings account, where transactions get processed by a scheduled batch job.",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AccountAdjustmentInitiateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AccountAdjustmentInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountAdjustmentInitiateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/TransactionType/NoPost/Control": {
          "delete": {
              "tags": [
                  "Current Account - Removes any no post transactions control from an account"
              ],
              "summary": "Removes any no post transactions control from an account",
              "description": "This API removes any no post transactions control from an account.",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentType"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TransactionTypeNoPostControlLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/TransactionTypeNoPostControlResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/TransactionType/NoPost/Update": {
          "put": {
              "tags": [
                  "Current Account - Places a control to prevent any debit or credit transactions for an account."
              ],
              "summary": "Places a control to prevent any debit or credit transactions for an account.",
              "description": "This API places a control to prevent any debit or credit transactions for an account.",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentType"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/TransactionTypeNoPostUpdateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TransactionTypeNoPostUpdateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/TransactionTypeNoPostUpdateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/ControlReason/Initiate": {
          "post": {
              "tags": [
                  "Current Account - Initiating control reason to an account."
              ],
              "summary": "\"This service domain orchestrates a consumer checking/demand deposit account. The typical range of services and fees covers payments and deposits, standing orders, sweeps, liens, check and debit card access. This service is used for adding control reason to an account to control payment posting.\"",
              "description": "\"Post Operation\"",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepBankId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentType"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AccountControlReasonInitiateRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AccountControlReasonInitiateLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountControlReasonInitiateResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/ControlReason/Occurance/Control": {
          "post": {
              "tags": [
                  "Current Account - Removes control reason from an account."
              ],
              "summary": "\"This service domain orchestrates a consumer checking/demand deposit account. The typical range of services and fees covers payments and deposits, standing orders, sweeps, liens, check and debit card access.  Removes control reason from an account.\"",
              "description": "\"Post Operation\"",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepBankId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentType"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/ControlReasonId"
                  },
                  {
                      "$ref": "#/components/parameters/ControlReasonOccurance"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AccountControlReasonOccuranceControlLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountControlReasonOccuranceControlResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.X-IFX-DepAcctId/DepositsAndWithdrawals/Holds/Initiate": {
          "post": {
              "tags": [
                  "Hold on a Deposit (IDA) account"
              ],
              "summary": "Places a hold on a financial transaction",
              "description": "This API places a hold on financial transactions.",
              "operationId": "HoldFinancialTransactions",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctTrnAmount"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctTrnDays"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HoldFinancialTransactionLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HoldFinancialTransactionResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:TicketCIMSKey:Headers.TicketCIMSKey/Image/Ticket/Retrieve": {
          "get": {
              "tags": [
                  "Retrieves deposit Tickets & items for an account by ShortCIMSKey"
              ],
              "summary": "Retrieves deposit Tickets & items for an account by ShortCIMSKey",
              "description": "This API retrieves the Deposit Ticket , Items and image location for deposit slips and financial instruments that were deposited with this slip.",
              "operationId": "RetrieveDepositTicket",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthType"
                  },
                  {
                      "$ref": "#/components/parameters/x-AuthCredentials"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BankIdType"
                  },
                  {
                      "$ref": "#/components/parameters/CustPermId"
                  },
                  {
                      "$ref": "#/components/parameters/TicketCIMSKey"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTicketInfoLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BankAcctTrnImgInqRs"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Statements/Preferences/Control": {
          "delete": {
              "tags": [
                  "IDA statement delivery method - email, mail, both"
              ],
              "summary": "Removes the IDA statement delivery method - email, mail, both",
              "description": "This API removes the IDA statement delivery method - email, mail, both.",
              "operationId": "ControlIDAStatementDeliveryMethod",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/PrefMessageStatusCd"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/ControlIDAStatementDeliveryMethodIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ControlIDAStatementDeliveryMethodLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ControlIDAStatementDeliveryMethodIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AccountConfig/Update": {
          "put": {
              "tags": [
                  "Updates the IDA Savings account configuration for interest payment and Modifies the IDA Savings account interest payout configuration"
              ],
              "summary": "Updates the IDA Savings account configuration for interest payment and Modifies the IDA Savings account interest payout configuration",
              "description": "This API updates the IDA Savings account configuration for interest payment and Modifies the IDA Savings account interest payout configuration.",
              "operationId": "UpdateAccountConfiguration",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/UpdateAccountConfigurationIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAccountConfigurationLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UpdateAccountConfigurationIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/ResponsibleUnit/Update": {
          "put": {
              "tags": [
                  "Updates the IDA account responsible unit"
              ],
              "summary": "Updates the IDA account responsible unit",
              "description": "This API updates the IDA account responsible unit.",
              "operationId": "UpdateAccountResponsibleUnit",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAccountResponsibleUnitLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UpdateAccountResponsibleUnitIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AdministrativeHold/Initiate": {
          "post": {
              "tags": [
                  "Administrative hold on a Deposit (IDA) account"
              ],
              "summary": "Adds a Administrative hold on a Deposit (IDA) account",
              "description": "This API adds Administrative hold on a Deposit (IDA) account.",
              "operationId": "InitiateDepAcctAdminHold",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/InitiateDepAcctAdminHoldIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitiateDepAcctAdminHoldLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/InitiateDepAcctAdminHoldIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AccountNumber/Initiate": {
          "post": {
              "tags": [
                  "Initiate/Open the IDA Account"
              ],
              "summary": "Generates a new account numbers for an Deposit (IDA) account",
              "description": "This API generates a new account numbers for an Deposit (IDA) account.",
              "operationId": "GenerateIDAAccountNumbers",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctSectionInd"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/RecCount"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GenerateIDAAccountNumbersLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GenerateIDAAccountNumbersIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Statements/Preferences/Update": {
          "post": {
              "tags": [
                  "IDA statement delivery method - email, mail, both"
              ],
              "summary": "Updates the IDA statement delivery method - email, mail, both",
              "description": "This API updates the IDA statement delivery method - email, mail, both.",
              "operationId": "UpdateIDAStatementDeliveryMethod",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/PrefMessageStatusCd"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/UpdateIDAStatementDeliveryMethodIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateIDAStatementDeliveryMethodLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UpdateIDAStatementDeliveryMethodIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/Account/Initiate": {
          "post": {
              "tags": [
                  "Initiate/Open the IDA Account"
              ],
              "summary": "Initiate/Open the IDA Account",
              "description": "This API initiate/open the IDA Account.",
              "operationId": "InitiateIDAAccount",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/PrefMessageStatusCd"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/TrnOwnerFuncCd"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/InitiateIDAAccountIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitiateIDAAccountLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/InitiateIDAAccountIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AdministrativeHold/Retrieve": {
          "get": {
              "tags": [
                  "Administrative hold on a Deposit (IDA) account"
              ],
              "summary": "Retrieves a Administrative hold on a Deposit (IDA) account",
              "description": "This API retrieves Administrative hold on a Deposit (IDA) account.",
              "operationId": "RetrieveDepAcctAdminHold",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/HoldDt"
                  },
                  {
                      "$ref": "#/components/parameters/HoldTime"
                  },
                  {
                      "$ref": "#/components/parameters/OfficerId"
                  },
                  {
                      "$ref": "#/components/parameters/HoldReferenceId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveDepositAccountAdminHoldLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/RetrieveDepAcctAdminHoldIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AdministrativeHold/Control": {
          "post": {
              "tags": [
                  "Administrative hold on a Deposit (IDA) account"
              ],
              "summary": "Removes a Administrative hold on a Deposit (IDA) account",
              "description": "This API removes Administrative hold on a Deposit (IDA) account.",
              "operationId": "ControlDepAcctAdminHold",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/ControlDepAcctAdminHoldIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ControlDepositAccountAdminHoldLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ControlDepAcctAdminHoldIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.X-IFX-DepAcctId/DepositsAndWithdrawals/Regular/Holds/Initiate": {
          "post": {
              "tags": [
                  "Hold on a Deposit (IDA) account"
              ],
              "summary": "Places 'Regular' hold on a financial transaction. The block is placed until the transaction is settled/posted.",
              "description": "This API places 'Regular' hold on a financial transaction. The block is placed until the transaction is settled/posted..",
              "operationId": "InitiateRegularHoldFinancialTransaction",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/AuthAgentId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/InitiateRegularHoldFinancialTransactionIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitiateRegularHoldFinancialTransactionLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/InitiateRegularHoldFinancialTransactionIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.X-IFX-DepAcctId/DepositsAndWithdrawals/Regular/Holds/Control": {
          "post": {
              "tags": [
                  "Hold on a Deposit (IDA) account"
              ],
              "summary": "Removes 'Regular' hold on a financial transaction.",
              "description": "This API removes 'Regular' hold on a financial transaction.",
              "operationId": "ControlRegularHoldFinancialTransaction",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/AuthAgentId"
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/ControlRegularHoldFinancialTransactionIFXRequest"
              },
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ControlRegularHoldFinancialTransactionLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ControlRegularHoldFinancialTransactionIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.X-IFX-DepAcctId/DepositsAndWithdrawals/Holds/Retrieve": {
          "get": {
              "tags": [
                  "Hold on a Deposit (IDA) account"
              ],
              "summary": "Retrieves holds on a deposit account.",
              "description": "This API retrieves holds on a deposit account.",
              "operationId": "RetrieveDepositAccountHold",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeRead}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveDepositAccountHoldLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/RetrieveDepositAccountHoldIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      },
      "/CurrentAccount/urn:DepAcctId:Headers.DepAcctId/AssistanceCode/Update": {
          "put": {
              "tags": [
                  "Deposit Account"
              ],
              "summary": "Update an Assistance Code for a Deposit (IDA) account",
              "description": "This API updates an Assistance Code for a Deposit (IDA) account.",
              "operationId": "UpdateDepositAccountAssistCode",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/x-api-key"
                  },
                  {
                      "$ref": "#/components/parameters/x-client-traceid"
                  },
                  {
                      "$ref": "#/components/parameters/x-idem-key"
                  },
                  {
                      "$ref": "#/components/parameters/AppCode"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctId"
                  },
                  {
                      "$ref": "#/components/parameters/DepAcctType"
                  },
                  {
                      "$ref": "#/components/parameters/BankId"
                  },
                  {
                      "$ref": "#/components/parameters/BranchId"
                  },
                  {
                      "$ref": "#/components/parameters/POSAgentId"
                  },
                  {
                      "$ref": "#/components/parameters/AssistanceCodeId"
                  }
              ],
              "security": [
                  {
                      "PilAuthorizer": [
                          {
                              "Fn::Sub": "${EvertecAuthScopeWrite}"
                          }
                      ]
                  }
              ],
              "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateDepositAccountAssistCodeLambdaARN}/invocations"
                  },
                  "responses": {
                      "default": {
                          "statusCode": "200"
                      }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UpdateDepositAccountAssistCodeIFXResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "$ref": "#/components/responses/BadRequestError"
                  },
                  "401": {
                      "$ref": "#/components/responses/UnauthorizedError"
                  },
                  "403": {
                      "$ref": "#/components/responses/ForbiddenError"
                  },
                  "404": {
                      "$ref": "#/components/responses/NotFoundError"
                  },
                  "429": {
                      "$ref": "#/components/responses/TooManyRequestsError"
                  },
                  "500": {
                      "$ref": "#/components/responses/InternalServerError"
                  }
              }
          }
      }
  },
  "components": {
      "schemas": {
          "IdDetail": {
              "type": "object",
              "properties": {
                  "IdType": {
                      "type": "string",
                      "nullable": true,
                      "example": "003"
                  },
                  "IdNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "H11000006"
                  },
                  "IdIssueDt": {
                      "type": "string",
                      "format": "date",
                      "nullable": true,
                      "example": "2020-11-11"
                  },
                  "IdExpDt": {
                      "type": "string",
                      "format": "date",
                      "nullable": true,
                      "example": "2025-11-11"
                  },
                  "IdIssuingEntity": {
                      "type": "string",
                      "nullable": true,
                      "example": "Government"
                  },
                  "IdIssuingLocation": {
                      "type": "string",
                      "nullable": true,
                      "example": "FL"
                  }
              }
          },
          "EmploymentInfo": {
              "type": "object",
              "properties": {
                  "EmploymentStatus": {
                      "type": "string",
                      "nullable": true,
                      "example": ""
                  },
                  "CompanyName": {
                      "type": "string",
                      "nullable": true,
                      "example": "Popular Bank"
                  },
                  "OccupationDesc": {
                      "type": "string",
                      "nullable": true,
                      "example": ""
                  }
              }
          },
          "PersonInfo": {
              "type": "object",
              "properties": {
                  "TaxId": {
                      "type": "string",
                      "nullable": true,
                      "example": "555111160"
                  },
                  "FirstName": {
                      "type": "string",
                      "example": "KERRY"
                  },
                  "LastName": {
                      "type": "string",
                      "nullable": true,
                      "example": "JONAH"
                  },
                  "Addr1": {
                      "type": "string",
                      "nullable": true,
                      "example": "2345"
                  },
                  "Addr2": {
                      "type": "string",
                      "nullable": true,
                      "example": "2345"
                  },
                  "City": {
                      "type": "string",
                      "nullable": true,
                      "example": "KANSAS CITY"
                  },
                  "StateProv": {
                      "type": "string",
                      "nullable": true,
                      "example": "MO"
                  },
                  "PostalCode": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "Country": {
                      "type": "string",
                      "nullable": true,
                      "example": "USA"
                  },
                  "EmailAddr": {
                      "type": "string",
                      "nullable": true,
                      "example": "ker62931asd@yopmail.com"
                  },
                  "PrimaryPhoneNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "998"
                  },
                  "MobilePhoneNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "2025551154"
                  },
                  "PrimaryOfficerPhoneNum": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "example": "998"
                  },
                  "SecondaryOfficerPhoneNum": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "example": "998"
                  },
                  "BirthDt": {
                      "type": "string",
                      "format": "date",
                      "nullable": true,
                      "example": "1994-07-02"
                  },
                  "ResidencyStatus": {
                      "type": "string",
                      "nullable": true,
                      "example": "USA"
                  },
                  "Citizenship": {
                      "type": "string",
                      "nullable": true,
                      "example": "USA"
                  },
                  "EmploymentHistory": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/EmploymentInfo"
                          }
                      ]
                  },
                  "IdDetails": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/IdDetail"
                      },
                      "nullable": true
                  },
                  "EstimatedIndividualIncome": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "description": "Personal Information, Contact Information, Economic Data"
          },
          "Customer": {
              "required": [
                  "IsPrimary",
                  "CustPermId",
                  "CostCenterNum",
                  "BranchNum"
              ],
              "type": "object",
              "properties": {
                  "PersonInfo": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PersonInfo"
                          }
                      ]
                  },
                  "ApplicantId": {
                      "type": "string",
                      "nullable": true,
                      "example": "a9N6C0000001MDPUA2"
                  },
                  "IsPrimary": {
                      "type": "boolean",
                      "example": true
                  },
                  "IsNew": {
                      "type": "boolean",
                      "example": false
                  },
                  "CustPermId": {
                      "type": "string",
                      "nullable": true,
                      "example": "00000072854"
                  },
                  "BranchNum": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "example": 1
                  },
                  "CostCenterNum": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "example": 36600
                  },
                  "NonDocumentaryIDUseChexSystem": {
                      "type": "string",
                      "nullable": true,
                      "example": "a9N6C0000001MDPUA2"
                  },
                  "NonDocumentaryIDUseCrossCore": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "UpdateDAODocType": {
                      "type": "boolean",
                      "example": false
                  },
                  "SecretQuestion": {
                      "type": "string",
                      "description": "Security Question - configured by customer for identification purpose",
                      "nullable": true,
                      "example": "Who is your best sports person ?"
                  },
                  "SecretAnswer": {
                      "type": "string",
                      "description": "Security Question Answer - configured by customer for identification purpose",
                      "nullable": true,
                      "example": "Messi"
                  }
              }
          },
          "DptAcctRq": {
              "required": [
                  "StateProv",
                  "PostalCode",
                  "DptAcctNum",
                  "City",
                  "Addr1",
                  "AcctType"
              ],
              "type": "object",
              "properties": {
                  "IsCD": {
                      "type": "boolean",
                      "example": false
                  },
                  "DptAcctNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "9853364439"
                  },
                  "AcctType": {
                      "type": "integer",
                      "format": "int32",
                      "example": 225
                  },
                  "AcctNumOnlineDollar": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "IsInternalXfer": {
                      "type": "boolean",
                      "example": false
                  },
                  "InternalAcctType": {
                      "type": "string",
                      "nullable": true,
                      "example": "S"
                  },
                  "DollarTrnAmt": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "example": 5000
                  },
                  "TimeDPCurrentInterestPlan": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "example": 300
                  },
                  "TimeDPCurrentInterestRate": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "example": 6
                  },
                  "TimeDPTerm": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "TimeDPTermIndicator": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "TimeDPIntFrequency": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "TimeDPIntFrequencyIndicator": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "TimeDPInterestPaymentMethod": {
                      "type": "string",
                      "nullable": true,
                      "example": "CONTINUE"
                  },
                  "DptDOApy": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "example": 5
                  },
                  "Addr1": {
                      "type": "string",
                      "nullable": true,
                      "example": "2345"
                  },
                  "City": {
                      "type": "string",
                      "nullable": true,
                      "example": "KANSAS CITY"
                  },
                  "StateProv": {
                      "type": "string",
                      "nullable": true,
                      "example": "MO"
                  },
                  "PostalCode": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "WithholdingInd": {
                      "type": "string",
                      "nullable": true,
                      "example": "A"
                  }
              }
          },
          "ExtAcct": {
              "type": "object",
              "properties": {
                  "ExtAcctNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "ExtACHAcctTypeCode": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "ExtUSA.RTN": {
                      "type": "integer",
                      "format": "int32",
                      "example": "64108"
                  },
                  "AcctDesc": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "VerificationDt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "64108"
                  },
                  "VerificationMethod": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  }
              }
          },
          "ErrorInfo": {
              "type": "object",
              "properties": {
                  "ErrorMessage": {
                      "type": "string",
                      "nullable": true,
                      "example": "AppCode is required."
                  },
                  "ErrorType": {
                      "type": "string",
                      "nullable": true,
                      "example": "INPUTDATAVALIDATION"
                  }
              },
              "additionalProperties": false
          },
          "Exceptions": {
              "type": "object",
              "properties": {
                  "Errors": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ErrorInfo"
                      }
                  }
              }
          },
          "BadRequestIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "CustId": {
              "type": "object",
              "properties": {
                  "CustPermId": {
                      "type": "string",
                      "description": "Customer Permanent Identifier",
                      "example": "92397307040001001",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "SPName": {
                      "type": "string",
                      "description": "Service Provider Name",
                      "example": "popularinc.com"
                  }
              },
              "description": "Customer Identifier",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "CardPlasticAcctStatus": {
              "type": "object",
              "properties": {
                  "CardPlasticAcctStatusCode": {
                      "type": "string",
                      "description": "Card Status Code - Check additional documentation",
                      "example": "0"
                  },
                  "StatusDesc": {
                      "type": "string",
                      "description": "Status Description - Check additional documentation",
                      "example": "Open",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Status Effective Date",
                      "format": "date",
                      "example": "2021-03-23"
                  },
                  "StatusModBy": {
                      "type": "string",
                      "description": "Status Modified By - NOT IN USE",
                      "example": ""
                  }
              },
              "x-used-by": "AcctInqCARD"
          },
          "CardPlasticAcctRec": {
              "type": "object",
              "properties": {
                  "DepAcctId": {
                      "$ref": "#/components/schemas/DepAcctId"
                  },
                  "CardAcctId": {
                      "$ref": "#/components/schemas/CardAcctId"
                  },
                  "BCOCustCode": {
                      "type": "string",
                      "description": "BCO Customer Code",
                      "example": "",
                      "x-used-by": "AcctInqCARD"
                  },
                  "Block": {
                      "type": "string",
                      "description": "Card Block",
                      "example": "1",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardholderType": {
                      "type": "string",
                      "description": "Card Holder Type - Check additional documentation",
                      "example": "1",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardIssued": {
                      "type": "string",
                      "description": "Card Issued",
                      "example": "2",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardIssuedDt": {
                      "type": "string",
                      "description": "Card Issued Date",
                      "format": "date",
                      "example": "2022-12-26",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardPANId": {
                      "type": "string",
                      "description": "Card PAN Number",
                      "example": "0215020177954543",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD"
                  },
                  "CardReissued": {
                      "type": "string",
                      "description": "Card Reissued",
                      "example": "1",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardReissuedDt": {
                      "type": "string",
                      "description": "Card Reissued Date",
                      "format": "date",
                      "example": "2022-01-23",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardUsed": {
                      "type": "string",
                      "description": "Card used",
                      "example": "",
                      "x-used-by": "AcctInqCARD"
                  },
                  "CardPlasticAcctStatus": {
                      "$ref": "#/components/schemas/CardPlasticAcctStatus"
                  },
                  "EmbossedName": {
                      "type": "string",
                      "description": "Card embossed name",
                      "example": "JEREMY J MARRERO-RODRIGUEZ",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD"
                  },
                  "ExpDt": {
                      "type": "string",
                      "description": "Card Expiry Date",
                      "format": "date",
                      "example": "2023-02-15",
                      "x-used-by": "AcctInqCARD"
                  },
                  "LastExpDt": {
                      "type": "string",
                      "description": "Last Expiry Date",
                      "format": "date",
                      "example": "2022-12-11",
                      "x-used-by": "AcctInqCARD"
                  },
                  "LastIssuedDt": {
                      "type": "string",
                      "description": "Last Issued Date",
                      "format": "date",
                      "example": "2021-12-16",
                      "x-used-by": "AcctInqCARD"
                  },
                  "LastMaintenanceDt": {
                      "type": "string",
                      "description": "Last Maintenance Date",
                      "format": "date",
                      "example": "2021-12-31",
                      "x-used-by": "AcctInqCARD"
                  },
                  "OpenDt": {
                      "type": "string",
                      "description": "Open Date",
                      "format": "date",
                      "example": "2021-12-01",
                      "x-used-by": "AcctInqCARD"
                  },
                  "OutstandingCardCnt": {
                      "type": "string",
                      "description": "Outstanding Card Count",
                      "example": "34",
                      "x-used-by": "AcctInqCARD"
                  },
                  "Owner": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Owner"
                      },
                      "description": "List of Dep Account",
                      "x-used-by": "AcctInqCARD"
                  },
                  "PostalAddress": {
                      "$ref": "#/components/schemas/PostAddr"
                  },
                  "PrimaryAcctCd": {
                      "type": "string",
                      "description": "Primary Account Code",
                      "example": "",
                      "x-used-by": "AcctInqCARD"
                  },
                  "PrioritySeqNbr": {
                      "type": "string",
                      "description": "Priority Sequence Number",
                      "example": "",
                      "x-used-by": "AcctInqCARD"
                  },
                  "ProductId": {
                      "type": "string",
                      "description": "Product Identifier",
                      "example": "023",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD"
                  },
                  "ProductDesc": {
                      "type": "string",
                      "description": "Product Description",
                      "example": "MultiCuenta Popular Staff",
                      "x-used-by": "AcctInqCARD"
                  },
                  "ReissuedCnt": {
                      "type": "string",
                      "description": "Reissue Count",
                      "example": "1",
                      "x-used-by": "AcctInqCARD"
                  },
                  "RemainingUseCnt": {
                      "type": "string",
                      "description": "Card Usage Count",
                      "example": "",
                      "x-used-by": "AcctInqCARD"
                  },
                  "Scheme": {
                      "type": "string",
                      "description": "Scheme",
                      "nullable": true,
                      "example": "Scheme",
                      "x-used-by": "AcctInqCARD"
                  },
                  "Sequence": {
                      "type": "string",
                      "description": "Reissue Indicator",
                      "example": "1",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD"
                  },
                  "TINInfo": {
                      "$ref": "#/components/schemas/TINInfo"
                  }
              }
          },
          "ExtAcctBal": {
              "type": "object",
              "properties": {
                  "ExtBalType": {
                      "type": "string",
                      "description": "Balance Type - Check additional documentation",
                      "example": "Orig"
                  },
                  "ExtBalAmt": {
                      "type": "number",
                      "description": "Extenral Balamce Amount",
                      "example": "4909.18"
                  }
              },
              "description": "Extended Account Balance"
          },
          "ExtAcctBalFeatures": {
              "type": "object",
              "properties": {
                  "ExtBalType": {
                      "type": "string",
                      "description": "Balance Type - Check additional documentation",
                      "example": "Orig"
                  },
                  "ExtBalAmt": {
                      "type": "number",
                      "description": "Extenral Balamce Amount",
                      "example": "4909.18"
                  },
                  "Days": {
                      "type": "integer",
                      "description": "Number of Days.",
                      "format": "int32",
                      "example": 1
                  }
              },
              "description": "Extended Account Balance"
          },
          "AcctBal": {
              "type": "object",
              "properties": {
                  "BalType": {
                      "type": "string",
                      "description": "Balance Type - Check additional documentation",
                      "example": "CheckingOneMnthAvg",
                      "x-used-by": "CurrentAccountInq,CurrAcctStmt,DepAcctTRaninq,AcctInqCDA"
                  },
                  "BalAmt": {
                      "type": "number",
                      "description": "Balance Amount",
                      "example": "409.90",
                      "x-used-by": "CurrentAccountInq,CurrAcctStmt,AcctInqCDA"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Balance Effective Date",
                      "format": "date",
                      "example": "2022-04-01"
                  },
                  "Desc": {
                      "type": "string",
                      "description": "Description"
                  }
              },
              "description": "Account Balance"
          },
          "CardAcctId": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "string",
                      "description": "Card Account identifier",
                      "example": "010039139",
                      "x-used-by": "AcctInqCARD"
                  },
                  "AcctType": {
                      "type": "string",
                      "description": "Card Account type",
                      "example": "CARD",
                      "x-used-by": "AcctInqCARD'"
                  },
                  "BankInfo": {
                      "$ref": "#/components/schemas/BankInfo"
                  }
              },
              "description": "Contains attributes for uniquely identifying a Card Account",
              "x-used-by": "AcctInqCARD"
          },
          "DepAcctId": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "string",
                      "description": "Account identifier",
                      "example": "022343571",
                      "x-used-by": "CurrentAccountInq,CurrAcctStmt"
                  },
                  "AcctType": {
                      "type": "string",
                      "description": "Account type - Check additional documentation",
                      "example": "IDA",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "SectionInd": {
                      "type": "string",
                      "description": "Section indicator. This can take the following values  * C (Checking)  * S (Savings)  * R (Reserve)  ",
                      "example": "C",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "BankInfo": {
                      "$ref": "#/components/schemas/BankInfo"
                  }
              },
              "description": "Contains attributes for uniquely identifying a Deposit Account",
              "x-used-by": "CurrentAccountInq,CurrAcctStmt"
          },
          "GetDepAcctFeaturesRec": {
              "type": "object",
              "properties": {
                  "CheckingInd": {
                      "type": "integer",
                      "description": "Checking Acct Indicator.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "SavingsInd": {
                      "type": "integer",
                      "description": "Savings Acct Indicator.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "ReserveInd": {
                      "type": "integer",
                      "description": "Reserve Acct Indicator.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "ManageCd": {
                      "type": "integer",
                      "description": "The account manage is composed of 3 bytes.  This field is mandatory only for Idaaccountinquiry.\nEach byte has a meaning:\nO-AM5A-ACCT-SECTIONS-IND - indicates the section the account can manage.\n1- chk + rsv + sav\n2- chk + rsv\n3- chk\n4 sav\nW-AM5A-ACCT-FUNDS-MANAGE-IND - indicates how the reserve funds will be manage and the order between sections.\n0 - no manage\n1 - automatic manage by system\n2 - manage by the client\nThe order for 0 and 2 is chk - rsv - sav\nThe order for 1 is chk - sav - rsv\nW-AM5A-ACCT-RSV-PMT-FREQ-IND - indicates how the reserve payment will be manage.",
                      "format": "int32",
                      "example": 124,
                      "externalDocs": {
                          "description": "ManageCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-managecd"
                      }
                  },
                  "XferInfo": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/XferInfo"
                      },
                      "description": "Xfer Infomration Aggregate.  This aggregate is mandatory only for Idaaccountinquiry."
                  },
                  "DepAcctStatus": {
                      "$ref": "#/components/schemas/DepAcctStatus"
                  },
                  "TransactionTypeId": {
                      "type": "integer",
                      "description": "No Post Transaction Code for the returned IdaAccount.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0,
                      "externalDocs": {
                          "description": "TransactionTypeId external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-transactiontypeid"
                      }
                  },
                  "InstructionCode": {
                      "type": "integer",
                      "description": "No Post Instruction Code for the returned IdaAccount.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0,
                      "externalDocs": {
                          "description": "InstructionCode external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-instructioncode"
                      }
                  },
                  "AcctSeverityCode": {
                      "type": "integer",
                      "description": "When the account has reason control, this field contains the highest severity risk. It can be from 1 to 3. Number 1 is the highest risk.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1,
                      "externalDocs": {
                          "description": "AcctSeverityCode external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-acctseveritycode"
                      }
                  },
                  "Owner": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Owner"
                      }
                  },
                  "HoldCode": {
                      "type": "string",
                      "description": "Hold Code for the IdaAccount (if there is a hold).  This field is mandatory only for Idaaccountinquiry.",
                      "example": "B"
                  },
                  "HoldDt": {
                      "type": "string",
                      "description": "Date on which the Hold is placed.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2022-09-19T00:00:00.000Z"
                  },
                  "HoldAmt": {
                      "type": "object",
                      "properties": {
                          "Amt": {
                              "type": "number",
                              "description": "Amount for which the Hold is posted and the decimal precision is 2.  This field is mandatory only for Idaaccountinquiry.",
                              "format": "Double",
                              "example": 100.55
                          }
                      },
                      "description": "Hold Amount Information.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "Officer": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Officer"
                      }
                  },
                  "StopCount": {
                      "type": "integer",
                      "description": "The number of stop payments in the account.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "ODLimit": {
                      "type": "string",
                      "description": "This is a service to allow the account overdrawn until a limit. The OD limit is calculated weekly using several account conditions.\nThis fields indicates if the account has the service.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "B"
                  },
                  "WaiveChgDtl": {
                      "$ref": "#/components/schemas/WaiveChgDtl"
                  },
                  "AcctStmtPrefInfo": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctStmtPrefInfo"
                      }
                  },
                  "CompensatingBal": {
                      "type": "integer",
                      "description": "Accounts that have the auto manage code on, will use the compensating balance to determine how funds are separated between sections.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int64",
                      "example": 5000
                  },
                  "GrpCd": {
                      "type": "string",
                      "description": "Indicates to which responsible group the account belongs to. Possible values are A, B, C, D, M and U.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "C"
                  },
                  "InvestCd": {
                      "type": "string",
                      "description": "Indicates if the Investment Service is active or not.  Possible values are Y and N.  This field is mandatory only for Idaaccountinquiry.\nY: Investment service is active\nN: Investment service is NOT active",
                      "example": "Y"
                  },
                  "FormatCd": {
                      "type": "integer",
                      "description": "Investment statement format code Possible values are 1, 2.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "CloseDt": {
                      "type": "string",
                      "description": "If the account is closed , this date will be populated.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2023-01-22T00:00:00.000Z"
                  },
                  "CloseRsn": {
                      "type": "string",
                      "description": "If the account is closed , this Reason code will be populated.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "TEST"
                  },
                  "CtrlReasonInfo": {
                      "type": "array",
                      "description": "Control Reason Information Aggregate.  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "$ref": "#/components/schemas/CtrlReasonInfo"
                      }
                  },
                  "RecModelInfo": {
                      "type": "array",
                      "description": "Periodic Fund transfer information aggregate.  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "$ref": "#/components/schemas/RecModelInfo"
                      }
                  },
                  "PartyAcctRelRec": {
                      "type": "array",
                      "description": "Tutor/ Gurantor details .  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "$ref": "#/components/schemas/PartyAcctRelRec"
                      }
                  },
                  "CourtID": {
                      "type": "integer",
                      "description": "Account Court details.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0
                  },
                  "CaseNum": {
                      "type": "integer",
                      "description": "Case Number.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0
                  },
                  "CaseType": {
                      "type": "string",
                      "description": "Case Type.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "NEW"
                  },
                  "HighODAmount": {
                      "type": "number",
                      "description": "High OverDraft Amount .  This field is mandatory only for Idaaccountinquiry.",
                      "format": "Double",
                      "example": 100.55
                  },
                  "HighOverDraftDt": {
                      "type": "string",
                      "description": "Highest overdraft date.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2021-09-08T00:00:00.000Z"
                  },
                  "ODActionCode": {
                      "type": "string",
                      "description": "Indicates the overdraft default action.  This field is mandatory only for Idaaccountinquiry.\nValid Values are,\nP-Pay\nR-Return\nor Emptry string",
                      "example": "P"
                  },
                  "YTDRtnCount": {
                      "type": "integer",
                      "description": "The times of returned items year to date.",
                      "format": "int32",
                      "example": 0
                  },
                  "YTDPmtCount": {
                      "type": "integer",
                      "description": "The times of paid items year to date.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0
                  },
                  "AcctIntPrefInfo": {
                      "type": "array",
                      "description": "Interest Preference aggregate.  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "$ref": "#/components/schemas/AcctIntPrefInfo"
                      }
                  },
                  "FinancialRev": {
                      "$ref": "#/components/schemas/FinancialRev"
                  },
                  "CreditLimit": {
                      "$ref": "#/components/schemas/CreditLimit"
                  },
                  "DelinqAging": {
                      "type": "array",
                      "description": "Delinquency Aging Aggregate.  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "$ref": "#/components/schemas/DelinqAging"
                      }
                  },
                  "DelinquencyAmt": {
                      "type": "number",
                      "description": "This field is mandatory only for Idaaccountinquiry..Reserve accumulated delinquency payment",
                      "format": "Double",
                      "example": 5.34
                  },
                  "IntRateInfo": {
                      "$ref": "#/components/schemas/IntRateInfo"
                  },
                  "AnnualSalesCd": {
                      "type": "string",
                      "description": "Annual sales code.  This field is mandatory only for Idaaccountinquiry.\nA: Less than $1MM\nB: Greater than $1MM and less than $5MM\nC: Equal or greater than $5MM and less than $20MM\nD: Equal or greater than $20MM and less than $35MM\nE: Equal or greater than $35MM and less than $50MM\nF: Greater than $50MM",
                      "example": "B"
                  },
                  "FiscalYr": {
                      "type": "string",
                      "description": "Fiscal year.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "date",
                      "example": "2023-09-31"
                  }
              }
          },
          "IntRateInfo": {
              "type": "object",
              "properties": {
                  "OldIntRate": {
                      "type": "number",
                      "description": "This field is used to establish a reserve interest rate that override the BCF table.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "Double",
                      "example": 7.55
                  },
                  "SPlIntRate": {
                      "type": "number",
                      "description": "This field is used to establish a reserve interest rate that override the BCF table.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "Double",
                      "example": 99.99
                  }
              },
              "description": "Interest Rate Information Aggregate.  This field is mandatory only for Idaaccountinquiry."
          },
          "DelinqAging": {
              "type": "object",
              "properties": {
                  "Aging": {
                      "type": "string",
                      "description": "This field is mandatory only for Idaaccountinquiry.. Accepted values in REST are\n30 days\n60 Days\n90 days",
                      "example": "30 days"
                  },
                  "Count": {
                      "type": "integer",
                      "description": "This field is mandatory only for Idaaccountinquiry.. Number of times account falls under each deliquency bucket",
                      "format": "int32",
                      "example": 0
                  }
              }
          },
          "CreditLimit": {
              "type": "object",
              "properties": {
                  "Status": {
                      "type": "object",
                      "properties": {
                          "StatusCode": {
                              "type": "string",
                              "description": "The credit line status.  This field is mandatory only for Idaaccountinquiry.",
                              "example": "A",
                              "externalDocs": {
                                  "description": "StatusCode external documentation",
                                  "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-statuscode"
                              }
                          }
                      },
                      "description": "Status Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "CancelRsnCd": {
                      "type": "integer",
                      "description": "The credit line cancel reason.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0,
                      "externalDocs": {
                          "description": "CancelRsnCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-cancelrsncd"
                      }
                  },
                  "InsCd": {
                      "type": "string",
                      "description": "Indicates if the credit line is insure.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "N"
                  },
                  "ApprovalDt": {
                      "type": "string",
                      "description": "The credit line approval date.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2021-07-01T00:00:00.000Z"
                  },
                  "Amt": {
                      "type": "number",
                      "description": "The credit line amount.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "Double",
                      "example": 100.77
                  },
                  "CollateralCd": {
                      "type": "integer",
                      "description": "Credit line collateral code.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1,
                      "externalDocs": {
                          "description": "CollateralCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-collateralcd"
                      }
                  },
                  "DepAcctId": {
                      "type": "object",
                      "properties": {
                          "AcctId": {
                              "type": "integer",
                              "description": "Credit line collateral account number.  This field is mandatory only for Idaaccountinquiry.",
                              "format": "int64",
                              "example": 0
                          }
                      },
                      "description": "Depost Accou nt Identifier Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "CollWarrantyCd": {
                      "type": "integer",
                      "description": "SBA collateral warranty code.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0,
                      "externalDocs": {
                          "description": "CollWarrantyCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-collwarrantycd"
                      }
                  },
                  "CollWarrantyInd": {
                      "type": "string",
                      "description": "SBA collateral warranty indicator.  This field is mandatory only for Idaaccountinquiry.\nF - Warranty full\nP - Partial warranty\nU - Unsecured",
                      "example": "P",
                      "externalDocs": {
                          "description": "CollWarrantyInd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-collwarrantyind"
                      }
                  },
                  "TempAmt": {
                      "type": "number",
                      "description": "Temporary CL amount.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "Double",
                      "example": 33.55
                  },
                  "TempExpDt": {
                      "type": "string",
                      "description": "Temporary CL expiration date.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2021-11-07T00:00:00.000Z"
                  },
                  "PmtCode": {
                      "type": "integer",
                      "description": "Reserve balance payment fraction. Value of zeros means to use the BCF T195 by product.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 999
                  },
                  "CancelPmtPlan": {
                      "type": "number",
                      "description": "Contains the cancellation payment plan agreed with the client.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "double",
                      "example": 0
                  },
                  "GuaranteePercent": {
                      "type": "integer",
                      "description": "Portion of the credit line amount that is guaranteed.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 100
                  },
                  "AutoRenewInd": {
                      "type": "string",
                      "description": "Business account can have a service for automatic renwe the credi line annually. This fields contains the value for the renwal phases and decisions.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "1",
                      "externalDocs": {
                          "description": "AutoRenewInd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-autorenewind"
                      }
                  },
                  "SBAGroupNo": {
                      "type": "integer",
                      "description": "SBA group number.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int64",
                      "example": 0
                  },
                  "SBAExpDt": {
                      "type": "string",
                      "description": "SBA expiration date.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2022-01-09T00:00:00.000Z"
                  },
                  "SBAGroupCd": {
                      "type": "integer",
                      "description": "SBA group code number.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 0
                  }
              },
              "description": "Credit Limit Aggregate.  This field is mandatory only for Idaaccountinquiry."
          },
          "FinancialRev": {
              "type": "object",
              "properties": {
                  "StmtRev": {
                      "type": "string",
                      "description": "Date in which the reserve accounts will be validated for financial revision.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2021-07-01T00:00:00.000Z"
                  },
                  "StmtAvail": {
                      "type": "string",
                      "description": "The balance of the account during the financial revision. Possible values are Y or N.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "Y",
                      "externalDocs": {
                          "description": "StmtAvail external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-StmtAvail"
                      }
                  }
              },
              "description": "Financial revision aggregate. This aggregate is applicable only for IdaAccountInq service"
          },
          "AcctIntPrefInfo": {
              "type": "object",
              "properties": {
                  "IntDispCd": {
                      "type": "string",
                      "description": "Instruction on how the interest will be pay.   This field is mandatory only for Idaaccountinquiry.\nN - no interest paid\nP - post in interest in the same account\nA - Interest will be credited to an affiliated account.",
                      "example": "N",
                      "externalDocs": {
                          "description": "IntDispCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-intdispcd"
                      }
                  },
                  "AffAcctId": {
                      "required": [
                          "AcctId"
                      ],
                      "type": "object",
                      "properties": {
                          "AcctId": {
                              "type": "integer",
                              "description": "The account number for the affiliate account.",
                              "format": "int64",
                              "example": 32389051
                          },
                          "SectionInd": {
                              "type": "string",
                              "description": "The account section for the affiliate account.   This field is mandatory only for Idaaccountinquiry.\nC - checking\nS - Savings",
                              "example": "S",
                              "externalDocs": {
                                  "description": "SectionInd external documentation",
                                  "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-sectionind"
                              }
                          }
                      },
                      "description": "Affiliated Accoun tId Aggregate."
                  },
                  "IntOverInt": {
                      "type": "string",
                      "description": "Establish if the interest will be computed interest over interest.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "Y"
                  }
              }
          },
          "PartyAcctRelRec": {
              "type": "object",
              "properties": {
                  "PartyAcctRelInfo": {
                      "type": "object",
                      "properties": {
                          "PartyAcctRel": {
                              "type": "object",
                              "properties": {
                                  "PartyAcctRelType": {
                                      "type": "string",
                                      "description": "This field is mandatory only for Idaaccountinquiry. Relationship type\nSupported values in REST are\nTutor\nGurantor",
                                      "example": "Tutor"
                                  },
                                  "PartyAcctRelCode": {
                                      "type": "string",
                                      "description": "Tutor Account code.  This field is mandatory only for Idaaccountinquiry.",
                                      "example": "N"
                                  }
                              },
                              "description": "Party Accoun Relationship Aggregate.  This field is mandatory only for Idaaccountinquiry."
                          },
                          "DepAcctId": {
                              "type": "object",
                              "properties": {
                                  "AcctId": {
                                      "type": "integer",
                                      "description": "Gurantor Account Number.  This field is mandatory only for Idaaccountinquiry.",
                                      "format": "int64",
                                      "example": 0
                                  }
                              },
                              "description": "Deposit Account Identifier Aggregate.  This field is mandatory only for Idaaccountinquiry."
                          }
                      },
                      "description": "Party Account Relationship Information Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "ContactInfo": {
                      "type": "object",
                      "properties": {
                          "PhoneNum": {
                              "type": "object",
                              "properties": {
                                  "Phone": {
                                      "type": "integer",
                                      "description": "Gurantor Phone number.  This field is mandatory only for Idaaccountinquiry.",
                                      "format": "int64",
                                      "example": 0
                                  }
                              },
                              "description": "Phone Number Aggregate.  This field is mandatory only for Idaaccountinquiry."
                          },
                          "PostAddr": {
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array",
                              "description": "Postal Address Aggregate. This field is mandatory only for Idaaccountinquiry.",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "Addr1": {
                                          "type": "string",
                                          "description": "Gurantor Address.  This field is mandatory only for Idaaccountinquiry.",
                                          "example": "LANE"
                                      },
                                      "City": {
                                          "type": "string",
                                          "description": "Gurantor City.  This field is mandatory only for Idaaccountinquiry.",
                                          "example": "DETROIT"
                                      },
                                      "PostalCode": {
                                          "type": "integer",
                                          "description": "Gurantor Zip Code.  This field is mandatory only for Idaaccountinquiry.",
                                          "format": "int64",
                                          "example": 0
                                      }
                                  }
                              }
                          }
                      },
                      "description": "Contact Information Aggreagate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "FullName": {
                      "type": "string",
                      "description": "Party relatrionship holder name (Gurantor/Tutor Name).  This field is mandatory only for Idaaccountinquiry.",
                      "example": "ALPHA"
                  },
                  "MaxWdrMth": {
                      "type": "integer",
                      "description": "Tutor Max Withdrawal Method.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int64",
                      "example": 0
                  },
                  "MaxWdrYear": {
                      "type": "integer",
                      "description": "Tutor Max Withdrawal Year.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int64",
                      "example": 0
                  },
                  "MaxWdrLfe": {
                      "type": "integer",
                      "description": "Tutor Max Withdrawal Lifetime.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int64",
                      "example": 0
                  }
              }
          },
          "RecModelInfo": {
              "type": "object",
              "properties": {
                  "Freq": {
                      "type": "string",
                      "description": "Service to have a periodic funnd transfer instruction.  This field is mandatory only for Idaaccountinquiry. This field indicates the frequency of the transfer like daily, monthly, etc",
                      "example": "D"
                  },
                  "CurAmt": {
                      "type": "object",
                      "properties": {
                          "Amt": {
                              "type": "number",
                              "description": "Indicates the amount to be periodically transfer.  This field is mandatory only for Idaaccountinquiry.",
                              "format": "Double",
                              "example": 10.55
                          }
                      },
                      "description": "Transfer Amount Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "DepAcctIdFrom": {
                      "type": "object",
                      "properties": {
                          "SectionInd": {
                              "type": "string",
                              "description": "Indicates the section from which the fubns will be extracted.  This field is mandatory only for Idaaccountinquiry.",
                              "example": "C",
                              "externalDocs": {
                                  "description": "SectionInd external documentation",
                                  "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-sectionind"
                              }
                          }
                      },
                      "description": "Deposit Account Identifier-From  Aggreagate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "DepAcctIdTo": {
                      "type": "object",
                      "properties": {
                          "AcctId": {
                              "type": "integer",
                              "description": "The account number to received the transfer funds.  This field is mandatory only for Idaaccountinquiry.",
                              "format": "int64",
                              "example": 0
                          },
                          "SectionInd": {
                              "type": "string",
                              "description": "Indicates the section which the funds will be transferred.  This field is mandatory only for Idaaccountinquiry.",
                              "example": "C",
                              "externalDocs": {
                                  "description": "SectionInd external documentation",
                                  "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-sectionind"
                              }
                          }
                      },
                      "description": "Deposit Account Identifier-To  Aggreagate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "PayDt1": {
                      "type": "string",
                      "description": "If the frequency is weekly, indicates the day of the transfer (Monday - Friday).  This field is mandatory only for Idaaccountinquiry.\nIf the frequency is monthly or bi-monthly, indicates the day of the month (01 - 31).",
                      "example": "1"
                  },
                  "PayDt2": {
                      "type": "string",
                      "description": "Use only for bi-monthly frequency. Indicates the day of the month (01 - 31).  This field is mandatory only for Idaaccountinquiry.",
                      "example": "1"
                  }
              }
          },
          "CtrlReasonInfo": {
              "type": "object",
              "properties": {
                  "ControlReasonID": {
                      "type": "integer",
                      "description": "Indicates if the account has a control.  This field is mandatory only for Idaaccountinquiry. There a maximum of 6 control. Control can be established by maintenance or by the system like new accounts or repeated overdraft.",
                      "format": "int32",
                      "example": 0
                  }
              }
          },
          "AcctStmtPrefInfo": {
              "type": "object",
              "description": "Statement Preference details for the IdaAccount.  This field is mandatory only for Idaaccountinquiry.",
              "properties": {
                  "StmtDispCd": {
                      "type": "string",
                      "description": "Indicate the method the statement will be delivered to the client.  This field is mandatory only for Idaaccountinquiry.\nE - Electronic\nM - Mail\nB - Branch copy\nU - Unit copy",
                      "example": "E",
                      "externalDocs": {
                          "description": "StmtDispCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-stmtdispcd"
                      }
                  },
                  "StmtUnitBankInfo": {
                      "type": "object",
                      "properties": {
                          "BranchId": {
                              "type": "integer",
                              "description": "Indicate the responsible unit destination for the branch or unit copy.  This field is mandatory only for Idaaccountinquiry.",
                              "format": "int32",
                              "example": 0
                          }
                      },
                      "description": "Statement Unit Bank Information Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "ContactInfo": {
                      "type": "object",
                      "properties": {
                          "PostAddr": {
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array",
                              "description": "Postal Address Aggregate.  This field is mandatory only for Idaaccountinquiry.",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "AddrType": {
                                          "type": "string",
                                          "description": "Indicates the client address to be used in the statement.  This field is mandatory only for Idaaccountinquiry.",
                                          "example": "P",
                                          "externalDocs": {
                                              "description": "AddrType external documentation",
                                              "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-addrtype"
                                          }
                                      }
                                  }
                              }
                          }
                      },
                      "description": "Contact Information Aggregate.  This field is mandatory only for Idaaccountinquiry."
                  },
                  "IncChkImg": {
                      "type": "string",
                      "description": "Indicates if the statmement with will include checks images.   This field is mandatory only for Idaaccountinquiry.",
                      "example": "Y"
                  }
              }
          },
          "Officer": {
              "type": "object",
              "description": "Bank Relationship Officer",
              "properties": {
                  "Type": {
                      "type": "string",
                      "description": "Bank Relationship Officer Type",
                      "example": "CL-Approver"
                  },
                  "Number": {
                      "type": "integer",
                      "description": "Bank Relationship Officer Number",
                      "example": 35850
                  }
              }
          },
          "WaiveChgDtl": {
              "type": "object",
              "properties": {
                  "UnCollecItemWaive": {
                      "type": "string",
                      "description": "Waive indicator for the paid uncollected item.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "W",
                      "externalDocs": {
                          "description": "UnCollecItemWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-uncollecItemwaive"
                      }
                  },
                  "VRUChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the VRU access charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "VRUChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-vruchrgwaive"
                      }
                  },
                  "ChkChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the check charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "ChkChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-chkchrgwaive"
                      }
                  },
                  "WDlChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the withdrawal charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "WDlChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-wdichrgwaive"
                      }
                  },
                  "ChkCpyChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for a check copy charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "ChkCpyChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-chkcpychrgwaive"
                      }
                  },
                  "POSTrnChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for POS charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "POSTrnChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-postrnchrgwaive"
                      }
                  },
                  "ShortStmtChrgWaive": {
                      "type": "string",
                      "description": "Indicates if the short statement charge will be charged or waived.  This field is mandatory only for Idaaccountinquiry. Possible values are W-waived, C- Charge",
                      "example": "W",
                      "externalDocs": {
                          "description": "ShortStmtChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-ShortStmtChrgWaive"
                      }
                  },
                  "BundleSvcChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for bundle service charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "BundleSvcChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-bundlesvcchrgwaive"
                      }
                  },
                  "ChkDepChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for check deposit charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "ChkDepChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-chkdepchrgwaive"
                      }
                  },
                  "CoinCurChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for coin currency change charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "CoinCurChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-coincurchrgwaive"
                      }
                  },
                  "DepChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for deposit charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "DepChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-depchrgwaive"
                      }
                  },
                  "NightDepChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for night deposit charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "NightDepChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-nightdepchrgwaive"
                      }
                  },
                  "FDICAssmtFeeWaive": {
                      "type": "string",
                      "description": "Waive indicator for FDIC assesement fee.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "FDICAssmtFeeWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-fdicassmtfeewaive"
                      }
                  },
                  "STMTCutoffChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the special statement cutoff charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "STMTCutoffChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-stmtcutoffchrgwaive"
                      }
                  },
                  "STMTPrintChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for special statement print charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "STMTPrintChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-stmtprintchrgwaive"
                      }
                  },
                  "ReDepChkChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for redeposit a returned deposit charge.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "ReDepChkChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-redepchkchrgwaive"
                      }
                  },
                  "RetChkChrgWaive": {
                      "type": "string",
                      "description": "Indicates if the returned cheque charge to the unit will be charged or waived.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "W",
                      "externalDocs": {
                          "description": "RetChkChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-RetChkChrgWaive"
                      }
                  },
                  "SVCChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the account service charges.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "C",
                      "externalDocs": {
                          "description": "SVCChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-svcchrgwaive"
                      }
                  },
                  "AnnualFeeWaive": {
                      "type": "string",
                      "description": "Waive indicator for the debit card annual fee.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "W",
                      "externalDocs": {
                          "description": "AnnualFeeWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-annualfeewaive"
                      }
                  },
                  "ATHAnnualFeeWaive": {
                      "type": "string",
                      "description": "Waive indicator for the debit card annual fee.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "W",
                      "externalDocs": {
                          "description": "ATHAnnualFeeWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-athannualfeewaive"
                      }
                  },
                  "ATMSVCChrgWaive": {
                      "type": "string",
                      "description": "Waive indicator for the ATM service charge.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "C",
                      "externalDocs": {
                          "description": "ATMSVCChrgWaive external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-atmsvcchrgwaive"
                      }
                  },
                  "TransChrgWaive": {
                      "type": "string",
                      "description": "Waive Transaction charges on the account.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "C"
                  },
                  "ChrgRsnCd": {
                      "type": "integer",
                      "description": "Waive Charges on the account.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1,
                      "externalDocs": {
                          "description": "ChrgRsnCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-chrgrsncd"
                      }
                  },
                  "AdtnlStmtCd": {
                      "type": "string",
                      "description": "Waive Additional Statement Code.  This field is mandatory only for Idaaccountinquiry.\nC - charge\nW - waive\nA - transfer the charge to an affiliate account",
                      "example": "C",
                      "externalDocs": {
                          "description": "AdtnlStmtCd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-adtnlstmtcd"
                      }
                  },
                  "CYCATHChrgWaive": {
                      "type": "integer",
                      "description": "Indicates the number of cycles the Ath was waived.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "CYCSVCChrgWaive": {
                      "type": "integer",
                      "description": "Indicates the number of cycles the system will waive the service charge.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "CYCSVCChrgWaiveCutoff": {
                      "type": "integer",
                      "description": "Indicates the number of cycles the system waived the service charge for some promotions.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "CYCSVCChrgWaiveRem": {
                      "type": "integer",
                      "description": "Indicates the number of cycles left to waive the service charge for some promotions.  This field is mandatory only for Idaaccountinquiry.",
                      "format": "int32",
                      "example": 1
                  },
                  "DtPlaced": {
                      "type": "string",
                      "description": "Indicates when the promotion was established.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2022-11-22T00:00:00.000Z"
                  },
                  "SVCPromoInd": {
                      "type": "string",
                      "description": "Indicates if the account is eligible for service charge promotion rates.  This field is mandatory only for Idaaccountinquiry.\nPossible values are Y - Account is eligible for promotion rates \nN- Account not eligible for promotion rates",
                      "example": "Y",
                      "externalDocs": {
                          "description": "SVCPromoInd external documentation",
                          "url": "https://evtcportal.sharepoint.com/sites/PossibleValuesRepository/SitePages/currentaccount-comboacct-retrieve.aspx#retrieve-SVCPromoInd"
                      }
                  },
                  "UpDt": {
                      "type": "string",
                      "description": "The date a service charge was placed by the system for certain product.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "2022-11-23T00:00:00.000Z"
                  }
              },
              "description": "Waive chanrge detail aggregate, which gives the waiver information about all fees and charges on the account.  This field is mandatory only for Idaaccountinquiry."
          },
          "XferInfo": {
              "type": "object",
              "properties": {
                  "SavAcctIdTo": {
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array",
                      "description": "This aggregate is used to save money in another account by rounding up the posted debits to the dollar. This field conatins the savings account number to be credited. The account can have up to four savings accounts.  This field is mandatory only for Idaaccountinquiry.",
                      "items": {
                          "type": "object",
                          "properties": {
                              "AcctId": {
                                  "type": "integer",
                                  "description": "Savings Acct Number.  This field is mandatory only for Idaaccountinquiry.",
                                  "format": "int64",
                                  "example": 11008212
                              }
                          }
                      }
                  },
                  "PayoutDt": {
                      "type": "string",
                      "description": "Indicated the date the balance will be transfer to the affiliate/Savings account to be available.",
                      "example": "2022-12-16T00:00:00.000Z"
                  },
                  "Freq": {
                      "type": "string",
                      "description": "Indicates the payout frequency for the seasonal product.  This field is mandatory only for Idaaccountinquiry.",
                      "example": "D"
                  }
              }
          },
          "DepAcctRec": {
              "type": "object",
              "properties": {
                  "AsOfDt": {
                      "type": "string",
                      "description": "As of today's date",
                      "format": "date",
                      "example": "2021-12-14",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "BankAcctExtStatus": {
                      "$ref": "#/components/schemas/BankAcctExtStatus"
                  },
                  "CheckingInd": {
                      "type": "boolean",
                      "description": "Checking Indicator",
                      "example": "true",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "SavingsInd": {
                      "type": "boolean",
                      "description": "Savings Indicator",
                      "example": "true",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "ReserveInd": {
                      "type": "boolean",
                      "description": "Reserve Indicator",
                      "example": "true",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "CardIssueDt": {
                      "type": "string",
                      "description": "Card Issue Date",
                      "format": "date",
                      "example": "2022-02-01",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "CloseDt": {
                      "type": "string",
                      "description": "Account Close Date",
                      "format": "date",
                      "example": "2022-02-01",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "CreditLimiAmt": {
                      "type": "number",
                      "description": "Credit Limit Amount",
                      "example": "700.00",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "CycleCode": {
                      "type": "string",
                      "description": "Statement Cycle Code - Check additional documentation",
                      "example": "0002",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DepAcctStatus": {
                      "$ref": "#/components/schemas/DepAcctStatus"
                  },
                  "EntityCd": {
                      "type": "string",
                      "description": "Entity Code - Identifies the Bank",
                      "example": "001",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "LastActivityDt": {
                      "type": "string",
                      "description": "Last Activity Date",
                      "format": "date",
                      "example": "2021-06-10",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "LastStmtBalAmt": {
                      "type": "number",
                      "description": "Last Statement Balance",
                      "format": "double",
                      "example": "1939.13",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "LastStmtDt": {
                      "type": "string",
                      "description": "Last Statement Date",
                      "format": "date",
                      "example": "2021-10-05",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "IdaRates": {
                      "$ref": "#/components/schemas/IdaRates"
                  },
                  "PastDuePmtCount": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "example": "0"
                      },
                      "description": "Past Due Payment Count",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "AnnualFees": {
                      "type": "number",
                      "description": "Annual Fee",
                      "example": ".00",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "Officer": {
                      "type": "array",
                      "items": {
                          "type": "string",
                          "description": "Bank Relationship Officer",
                          "example": "",
                          "x-used-by": "CurrentAccountInq"
                      },
                      "description": "List of Bank Officers"
                  },
                  "OpenDt": {
                      "type": "string",
                      "description": "Account Open Date",
                      "format": "date",
                      "example": "2021-12-01",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "Owner": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Owner"
                      },
                      "description": "List of Dep Account",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "PostalAddress": {
                      "$ref": "#/components/schemas/PostAddr"
                  },
                  "ProductId": {
                      "type": "string",
                      "description": "Product Identifier",
                      "example": "023",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "ProductDesc": {
                      "type": "string",
                      "description": "Product Description",
                      "example": "MultiCuenta Popular Staff",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "ReturnedMailInd": {
                      "type": "string",
                      "description": "Returned Mail Indicator - Check additional documentation",
                      "example": "9",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyCd": {
                      "type": "string",
                      "description": "Delinquency Code - Check additional documentation",
                      "example": "FF0001",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyAmt": {
                      "type": "number",
                      "description": "Delinquency Amount",
                      "example": "10.23",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyPromiseDt": {
                      "type": "string",
                      "description": "Delinquency Promise Date",
                      "format": "date",
                      "example": "2021-09-20",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyDPD": {
                      "type": "string",
                      "description": "Delinquency past due days or date",
                      "example": "0",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "CreditLimitAmt": {
                      "type": "number",
                      "description": "Delinquency Promise Amount",
                      "format": "double",
                      "example": "700.09",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyPromiseAmt": {
                      "type": "number",
                      "description": "Delinquency Promise Amount",
                      "format": "double",
                      "example": "12.09",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyStatus": {
                      "type": "string",
                      "description": "Delinquency Status - Check additional documentation",
                      "example": "Q",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "TefraCd": {
                      "type": "string",
                      "description": "Tefra Code - Check additional documentation",
                      "example": "6",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "ODLimit": {
                      "type": "string",
                      "description": "Overdraft Limit",
                      "example": "B",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyPromiseDt2": {
                      "type": "string",
                      "description": "Delinquency Promise Date 2",
                      "format": "date",
                      "example": "2021-09-20",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "DelinquencyPromiseAmt2": {
                      "type": "number",
                      "description": "Delinquency Promise Amount 2",
                      "format": "double",
                      "example": ".00",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "AtmPmtInd": {
                      "type": "boolean",
                      "description": "Amount Payment Indictor",
                      "example": "true",
                      "x-used-by": "CurrentAccountInq"
                  }
              },
              "description": "Represents a summarized version of deposit account information"
          },
          "BankAcctExtStatus": {
              "type": "object",
              "properties": {
                  "ChargeOff": {
                      "type": "boolean",
                      "description": "Charge Off Indicator",
                      "example": false,
                      "x-used-by": "CurrentAccountInq"
                  },
                  "NSFCount": {
                      "type": "integer",
                      "description": "Non sufficient fund count",
                      "example": "0",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "NSFReturnCount": {
                      "type": "integer",
                      "description": "Non sufficient fund return count",
                      "example": "0",
                      "x-used-by": "CurrentAccountInq"
                  }
              },
              "description": "Account additional status details",
              "x-used-by": "CurrentAccountInq"
          },
          "Owner": {
              "type": "object",
              "properties": {
                  "OwnershipType": {
                      "type": "string",
                      "description": "Ownership Type - PRIMARY - SECONDARY - Check additional documentation",
                      "example": "PRIMARY",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "RelationshipType": {
                      "type": "string",
                      "description": "Relationship Type - Check additional documentation",
                      "example": "003",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "PersonName": {
                      "$ref": "#/components/schemas/PersonName"
                  },
                  "OrgInfo": {
                      "$ref": "#/components/schemas/OrgInfo"
                  },
                  "TINInfo": {
                      "$ref": "#/components/schemas/TINInfo"
                  },
                  "CustId": {
                      "$ref": "#/components/schemas/CustId"
                  },
                  "PhoneNum": {
                      "$ref": "#/components/schemas/PhoneNum"
                  },
                  "EmailAddr": {
                      "type": "string",
                      "description": "Email Address",
                      "example": "MARREROJJ@HOTMAIL.COM",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "BirthDt": {
                      "type": "string",
                      "description": "Date of Birth",
                      "format": "date",
                      "example": "1972-02-02",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "ESignRec": {
                      "$ref": "#/components/schemas/ESignRec"
                  }
              },
              "description": "Account Owner Details"
          },
          "OrgInfo": {
              "type": "object",
              "properties": {
                  "IndustId": {
                      "$ref": "#/components/schemas/IndustId"
                  },
                  "Name": {
                      "type": "string",
                      "description": "Name of the Organization",
                      "example": "Banco Popular"
                  },
                  "LegalName": {
                      "type": "string",
                      "description": "Legal Name - For Corporate customer  - This Legal Name field is used to send customer name",
                      "example": "CORPORATE OFFICE",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "CompositeContactInfo": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/CompositeContactInfo"
                      },
                      "description": "Composite Contact Information"
                  },
                  "TINInfo": {
                      "$ref": "#/components/schemas/TINInfo"
                  },
                  "EstablishDt": {
                      "type": "string",
                      "description": "Business Established Date",
                      "format": "date",
                      "example": "2002-12-12"
                  },
                  "NumEmployees": {
                      "type": "integer",
                      "description": "Number of Employees",
                      "format": "int64",
                      "nullable": true,
                      "example": "238"
                  },
                  "BusinessSince": {
                      "type": "string",
                      "description": "Business Established Date",
                      "format": "date",
                      "example": "2022-12-12"
                  },
                  "NAICSCd": {
                      "type": "string",
                      "description": "NAICS Code (North American Industry Classification System)",
                      "example": ""
                  }
              },
              "description": "Organization Details",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "CompositeContactInfo": {
              "properties": {
                  "ContactInfoType": {
                      "type": "string",
                      "description": "Contact Information Type",
                      "example": "Phone"
                  },
                  "ContactInfo": {
                      "$ref": "#/components/schemas/ContactInfo"
                  }
              },
              "description": "Composite Contact Information"
          },
          "PostAddr": {
              "type": "object",
              "properties": {
                  "Addr1": {
                      "type": "string",
                      "description": "Address line 1",
                      "example": "URB SIERRA BAYAMON",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Addr2": {
                      "type": "string",
                      "description": "Address line 2",
                      "example": "87-1 CALLE 70",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Addr3": {
                      "type": "string",
                      "description": "Address line 3",
                      "example": "BAYAMON PR 00961-4571",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Addr4": {
                      "type": "string",
                      "description": "Address line 4",
                      "example": "Line4",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Addr5": {
                      "type": "string",
                      "description": "Address line 5",
                      "example": "Line5"
                  },
                  "City": {
                      "type": "string",
                      "description": "City",
                      "example": "St Juan",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "County": {
                      "type": "string",
                      "description": "County",
                      "example": ""
                  },
                  "StateProv": {
                      "type": "string",
                      "description": "State Province",
                      "example": "MO",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "PostalCode": {
                      "type": "string",
                      "description": "Postal Code",
                      "example": "00961-4571",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Country": {
                      "type": "string",
                      "description": "Country",
                      "example": "PR"
                  },
                  "Territory": {
                      "type": "string",
                      "description": "Territory",
                      "example": ""
                  },
                  "AddrType": {
                      "type": "string",
                      "description": "Address Type - NOT IN USE",
                      "example": "P"
                  },
                  "StartDt": {
                      "type": "string",
                      "description": "Current or Previous Residence Start Date",
                      "format": "date",
                      "example": "2021-06-01"
                  },
                  "EndDt": {
                      "type": "string",
                      "description": "Current or Previous Residence End Date",
                      "format": "date",
                      "example": "2021-06-01"
                  }
              },
              "description": "Postal Address",
              "x-used-by": "AcctInqCARD,AcctInqCDA"
          },
          "ContactInfo": {
              "type": "object",
              "properties": {
                  "ContactPref": {
                      "type": "string",
                      "description": "Preferred Time to Contact",
                      "example": ""
                  },
                  "PrefTimeStart": {
                      "type": "string",
                      "description": "Contact Time - From",
                      "format": "date",
                      "example": "2021-06-01"
                  },
                  "PrefTimeEnd": {
                      "type": "string",
                      "description": "Contact Time - To",
                      "format": "date",
                      "example": "2021-06-01"
                  },
                  "PhoneNum": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PhoneNum"
                      }
                  },
                  "ContactName": {
                      "type": "string",
                      "description": "Contact Name",
                      "example": "LUIS"
                  },
                  "EmailAddr": {
                      "type": "array",
                      "items": {
                          "type": "string",
                          "description": "Email Address",
                          "example": "mark.seanoldo@gmail.com"
                      }
                  },
                  "URL": {
                      "type": "string",
                      "description": "Uniform Resource Locator",
                      "example": "https://TestingforAPI.Test.com"
                  },
                  "PostAddr": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PostAddr"
                      },
                      "description": "List of Postal Addresses"
                  }
              },
              "description": "Contact Information"
          },
          "IndustId": {
              "type": "object",
              "properties": {
                  "Org": {
                      "type": "string",
                      "description": "Organization ID",
                      "example": "123",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "IndustNum": {
                      "type": "string",
                      "description": "Organization Number",
                      "example": "1234"
                  }
              },
              "description": "Organization Identifier"
          },
          "PhoneNum": {
              "type": "object",
              "properties": {
                  "PhoneType": {
                      "type": "string",
                      "description": "Contact Phone Type - Primary - Secondary - Mobile - Check additional documentation",
                      "example": "PRIMARY",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "Phone": {
                      "type": "string",
                      "description": "Phone Number",
                      "example": "5148901465",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  }
              },
              "description": "Contact Phone Number",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "TINInfo": {
              "type": "object",
              "properties": {
                  "TINType": {
                      "type": "string",
                      "description": "Tax ID Type - Check additional documentation",
                      "example": "E"
                  },
                  "TaxId": {
                      "type": "string",
                      "description": "Tax ID",
                      "example": "584115399",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "CertCode": {
                      "type": "string",
                      "description": "Certificate Code - NOT IN USE",
                      "example": ""
                  }
              },
              "description": "Tax Identification Details",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "PersonName": {
              "type": "object",
              "properties": {
                  "LastName": {
                      "type": "string",
                      "description": "Last Name",
                      "example": "RODRIGUEZ"
                  },
                  "FirstName": {
                      "type": "string",
                      "description": "First Name",
                      "example": "JEREMY"
                  },
                  "MiddleName": {
                      "type": "string",
                      "description": "Middle Name",
                      "example": "MARRERO"
                  },
                  "TitlePrefix": {
                      "type": "string",
                      "description": "Title Prefix",
                      "example": "Mr."
                  },
                  "NameSuffix": {
                      "type": "string",
                      "description": "Name Suffix",
                      "example": "Test"
                  },
                  "NickName": {
                      "type": "string",
                      "description": "Nick Name",
                      "example": "JEREMY"
                  },
                  "LegalName": {
                      "type": "string",
                      "description": "Legal Name",
                      "example": "JEREMY J MARRERO-RODRIGUEZ",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  }
              },
              "description": "Person Name",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "ESignRec": {
              "type": "object",
              "properties": {
                  "ESignedFlag": {
                      "type": "string",
                      "description": "E-Sign Flag",
                      "example": "Y",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  },
                  "ESignedDt": {
                      "type": "string",
                      "description": "E-Sign Date",
                      "format": "date",
                      "example": "2022-02-02",
                      "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
                  }
              },
              "description": "E-Signature Record",
              "x-used-by": "CurrentAccountInq,AcctInqCARD,AcctInqCDA"
          },
          "IdaRates": {
              "type": "object",
              "properties": {
                  "LastCheckingRate": {
                      "type": "number",
                      "description": "Checking Account Interest Rate",
                      "example": ".0000000",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "LastSavingsRate": {
                      "type": "number",
                      "description": "Savings Account Interest Rate",
                      "example": ".0000000",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "LastReserveRate": {
                      "type": "number",
                      "description": "Reserve Account Interest Rate",
                      "example": ".9999999",
                      "x-used-by": "CurrentAccountInq"
                  }
              },
              "description": "Interest Rates - Returned for IDA Accounts",
              "x-used-by": "CurrentAccountInq"
          },
          "DepAcctStatus": {
              "type": "object",
              "properties": {
                  "DepAcctStatusCode": {
                      "type": "string",
                      "description": "Account Status Code - Check additional documentation",
                      "example": "A",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "StatusDesc": {
                      "type": "string",
                      "description": "Status Description - Check additional documentation",
                      "example": "ACTIVE",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Status Effective Date",
                      "format": "date",
                      "example": "2021-09-08"
                  }
              },
              "description": "Deposit Account Status",
              "x-used-by": "CurrentAccountInq"
          },
          "BankInfo": {
              "required": [
                  "BankIdType",
                  "BankId"
              ],
              "type": "object",
              "properties": {
                  "BankIdType": {
                      "type": "string",
                      "description": "Required when using Evertec CORE - Check additional documentation",
                      "example": "FIParty",
                      "x-used-by": "CurrAcctStmt,AcctInqCARD,DepindexDocumentLibrary,CAStopCheckRetrieve"
                  },
                  "BankId": {
                      "type": "string",
                      "description": "Required when using Evertec CORE - Check additional documentation",
                      "example": "001",
                      "x-used-by": "CurrentAccountInq,CurrAcctStmt,AcctInqCARD,DepindexDocumentLibrary,CAStopCheckRetrieve"
                  },
                  "Name": {
                      "type": "string",
                      "description": "Bank Name",
                      "example": "Banco Popular De Puerto Rico",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "BranchId": {
                      "type": "number",
                      "description": "Applicable & Returned - if the channel consuming this service is Ebss",
                      "example": 27,
                      "x-used-by": "CAStopCheckRetrieve"
                  }
              },
              "description": "Bank Information aggregate. ",
              "x-used-by": "CurrentAccountInq,CurrAcctStmt,AcctInqCARD,CAStopCheckRetrieve"
          },
          "CurrentAccountInitiateRequest": {
              "type": "object",
              "properties": {
                  "CustList": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Customer"
                      },
                      "nullable": true
                  },
                  "DepAcctRq": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/DptAcctRq"
                          }
                      ],
                      "nullable": true
                  },
                  "ExtAcctInd": {
                      "type": "boolean"
                  },
                  "ExtAcct": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/ExtAcct"
                          }
                      ],
                      "nullable": true
                  }
              }
          },
          "CurrentAccountInitiateResponse": {
              "type": "object",
              "properties": {
                  "CustList": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Customer"
                      },
                      "nullable": true
                  },
                  "DepAcctRq": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/DptAcctRq"
                          }
                      ],
                      "nullable": true
                  },
                  "DepAcctMatDt": {
                      "type": "string",
                      "description": "Deposit Account Maturity Date. Only valid for CD accounts.",
                      "format": "date",
                      "nullable": true,
                      "example": "1985-01-01"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "GenerateAcctNumRequest": {
              "required": [
                  "BranchId",
                  "AcctType"
              ],
              "type": "object",
              "properties": {
                  "BranchId": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                  },
                  "AcctType": {
                      "type": "integer",
                      "format": "int32",
                      "example": 302
                  }
              }
          },
          "GenerateAcctNumResponse": {
              "type": "object",
              "properties": {
                  "BranchId": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                  },
                  "AcctType": {
                      "type": "integer",
                      "format": "int32",
                      "example": 225
                  },
                  "AcctId": {
                      "type": "string",
                      "example": "123546"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "GenerateDeviceNumRequest": {
              "required": [
                  "CardNumPfx"
              ],
              "type": "object",
              "properties": {
                  "CardNumPfx": {
                      "type": "string",
                      "example": "99913809"
                  }
              }
          },
          "GenerateDeviceNumResponse": {
              "type": "object",
              "properties": {
                  "CardNum": {
                      "type": "string",
                      "example": "1234567"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "IssuedDeviceInitiateRequest": {
              "type": "object",
              "properties": {
                  "Customers": {
                      "type": "array",
                      "items": {
                          "required": [
                              "IsPrimary",
                              "CustNum",
                              "MobilePhoneNum",
                              "PrimaryPhoneNum",
                              "FirstName",
                              "LastName",
                              "TaxId",
                              "BirthDt",
                              "Addr1",
                              "City",
                              "PostalCode",
                              "StateProv",
                              "Country"
                          ],
                          "type": "object",
                          "properties": {
                              "ApplicantId": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "Test"
                              },
                              "IsPrimary": {
                                  "type": "string",
                                  "example": "true"
                              },
                              "CustNum": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "00000072854"
                              },
                              "MobilePhoneNum": {
                                  "type": "string",
                                  "example": "8479945858"
                              },
                              "PrimaryPhoneNum": {
                                  "type": "string",
                                  "example": "90633"
                              },
                              "FirstName": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "Booking"
                              },
                              "LastName": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "Class"
                              },
                              "TaxId": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "875034021"
                              },
                              "BirthDt": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "1985-01-01"
                              },
                              "Addr1": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "10255 W Higgins rd"
                              },
                              "Addr2": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "Suite 200"
                              },
                              "City": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "Rosemont"
                              },
                              "StateProv": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "IL"
                              },
                              "PostalCode": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "60018"
                              },
                              "Country": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "USA"
                              },
                              "BranchNum": {
                                  "type": "integer",
                                  "format": "int64",
                                  "nullable": true,
                                  "example": 1
                              },
                              "CardDetails": {
                                  "required": [
                                      "DPAcctNum",
                                      "CardNum",
                                      "CardNumPfx"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "DPAcctNum": {
                                          "type": "string",
                                          "example": "9996961869"
                                      },
                                      "CardNum": {
                                          "type": "string",
                                          "example": "9991380900003706"
                                      },
                                      "CardNumPfx": {
                                          "type": "string",
                                          "example": "99913809"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "IssuedDeviceInitiateResponse": {
              "type": "object",
              "properties": {
                  "CardDetails": {
                      "type": "object",
                      "properties": {
                          "DPAcctNum": {
                              "type": "string",
                              "example": "2661252329"
                          },
                          "CardNum": {
                              "type": "string",
                              "example": "9991380900003730"
                          },
                          "CardNumPfx": {
                              "type": "string",
                              "example": "99913809"
                          }
                      }
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "DebitCardActivationResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "CardRelatedCustomersIFXResponse": {
              "type": "object",
              "properties": {
                  "AcctType": {
                      "type": "string",
                      "nullable": true,
                      "example": "CBM"
                  },
                  "CardAcct": {
                      "type": "object",
                      "properties": {
                          "AcctId": {
                              "type": "string",
                              "example": "9634093059"
                          },
                          "ProductId": {
                              "type": "string",
                              "example": "MC"
                          },
                          "CardNumber": {
                              "type": "string",
                              "example": "9991380900006568"
                          },
                          "ProductDesc": {
                              "type": "string",
                              "example": "MASTERMONEY DEBIT - NEW YORK"
                          },
                          "IssuedDt": {
                              "type": "string",
                              "example": "2023-01-19"
                          },
                          "ExpDt": {
                              "type": "string",
                              "example": "2023-02-15"
                          }
                      },
                      "additionalProperties": false
                  },
                  "Customer": {
                      "type": "object",
                      "properties": {
                          "IsPrimary": {
                              "type": "boolean",
                              "example": true
                          },
                          "PersonInfo": {
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/CardPersonInfo"
                                  }
                              ]
                          }
                      },
                      "additionalProperties": false
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "CardPersonInfo": {
              "type": "object",
              "properties": {
                  "TaxId": {
                      "type": "string",
                      "nullable": true,
                      "example": "555111160"
                  },
                  "FirstName": {
                      "type": "string",
                      "example": "KERRY"
                  },
                  "LastName": {
                      "type": "string",
                      "nullable": true,
                      "example": "JONAH"
                  },
                  "Addr1": {
                      "type": "string",
                      "nullable": true,
                      "example": "2345"
                  },
                  "City": {
                      "type": "string",
                      "nullable": true,
                      "example": "KANSAS CITY"
                  },
                  "StateProv": {
                      "type": "string",
                      "nullable": true,
                      "example": "MO"
                  },
                  "PostalCode": {
                      "type": "string",
                      "nullable": true,
                      "example": "64108"
                  },
                  "PrimaryPhoneNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "998"
                  },
                  "MobilePhoneNum": {
                      "type": "string",
                      "nullable": true,
                      "example": "2025551154"
                  }
              },
              "additionalProperties": false
          },
          "GetTransactionsResponse": {
              "type": "object",
              "properties": {
                  "NextPageNum": {
                      "type": "integer",
                      "description": "Returned when using FIS CORE. Return this value while requesting next page.",
                      "example": 11
                  },
                  "HasMoreItems": {
                      "type": "boolean",
                      "description": "Set to true if there more items",
                      "example": true
                  },
                  "RecCtrlOut": {
                      "$ref": "#/components/schemas/RecCtrlOut"
                  },
                  "SelRangeDt": {
                      "$ref": "#/components/schemas/SelRangeDt"
                  },
                  "DepAcctTrnRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepAcctTrnRec"
                      }
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      }
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "GetAcctInqResponse": {
              "type": "object",
              "properties": {
                  "DepAcctRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepAcctRec"
                      },
                      "description": "List of Dep Account"
                  },
                  "CustLangPref": {
                      "type": "string",
                      "description": "Customer Language preference",
                      "example": "S",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "RespUnitCostCtr": {
                      "type": "string",
                      "description": "Responsible Unit cost center",
                      "example": "000062231",
                      "x-used-by": "CurrentAccountInq"
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      },
                      "description": "List of Account Balances"
                  },
                  "ExtAcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ExtAcctBal"
                      },
                      "description": "List of Extended Account Balances"
                  },
                  "CardPlasticAcctRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/CardPlasticAcctRec"
                      },
                      "description": "List of CardPlastic Account"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "GetAcctFeaturesResponse": {
              "type": "object",
              "properties": {
                  "DepAcctId": {
                      "$ref": "#/components/schemas/DepAcctId"
                  },
                  "DepAcctRec": {
                      "$ref": "#/components/schemas/GetDepAcctFeaturesRec"
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      },
                      "description": "List of Account Balances"
                  },
                  "ExtAcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ExtAcctBalFeatures"
                      },
                      "description": "List of Extended Account Balances"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "DepAcctTrnRec": {
              "type": "object",
              "properties": {
                  "TrnDt": {
                      "type": "string",
                      "description": "Returned by FIS CORE - To be deprecated - Mapped to PostedDt",
                      "format": "date",
                      "example": "2022-10-13"
                  },
                  "ChkNum": {
                      "type": "string",
                      "description": "Check Number",
                      "example": "00000234222",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnType": {
                      "type": "string",
                      "description": "Transaction type - Check additional documentation",
                      "example": "CR, DB",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnSrc": {
                      "type": "string",
                      "description": "Transaction Source - Check additional documentation",
                      "example": "D",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnCountryCd": {
                      "type": "string",
                      "description": "Transaction Country Code - WITS UNSD 3-digit code",
                      "example": "840",
                      "x-used-by": "DepAcctTRaninq"
                  },
                  "TrnPostalCd": {
                      "type": "string",
                      "description": "Transaction Postal Code",
                      "example": "736920",
                      "x-used-by": "DepAcctTRaninq"
                  },
                  "TrnReasonCd": {
                      "type": "string",
                      "description": "Transaction Reason Code - Check additional documentation",
                      "example": "098",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnAmt": {
                      "type": "number",
                      "example": 0.66,
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnId": {
                      "type": "string",
                      "description": "Transaction Trace Identifier",
                      "example": "20221013000000004",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnCd": {
                      "type": "string",
                      "description": "Transaction Code - Check additional documentation",
                      "example": "954",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Transaction Effective Date",
                      "format": "date",
                      "example": "2021-09-08",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnPosted": {
                      "type": "boolean",
                      "description": "Set to true when the transaction is posted",
                      "example": true
                  },
                  "PostedDt": {
                      "type": "string",
                      "description": "Transaction Posted Date",
                      "format": "date",
                      "example": "2021-09-08",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "Memo": {
                      "type": "array",
                      "items": {
                          "allOf": [
                              {
                                  "$ref": "#/components/schemas/MemoRec"
                              }
                          ]
                      },
                      "description": "Transaction Memo"
                  },
                  "TrnImgRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/TrnImgRec"
                      },
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "MerchantURL": {
                      "type": "string",
                      "description": "Merchant URL",
                      "example": "WWW.SANPATRICIO.COM",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "MerchantId": {
                      "type": "string",
                      "description": "Merchant Identifier",
                      "example": "211383",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "MerchantCatCd": {
                      "type": "string",
                      "description": "Merchant Category Code - Check additional documentation",
                      "example": "5411",
                      "x-used-by": "DepAcctTRaninq"
                  },
                  "TrnRunningBalAmt": {
                      "type": "number",
                      "description": "Running Balance for Transaction",
                      "format": "double",
                      "example": 100
                  },
                  "Info1": {
                      "type": "string",
                      "description": "Returned by FIS CORE",
                      "example": "RETURN SETTLE D"
                  },
                  "Info2": {
                      "type": "string",
                      "description": "Returned by FIS CORE - Transaction return code - <TBD - find where this could be mapped to>",
                      "example": "ACH RTN - R14"
                  },
                  "Info3": {
                      "type": "string",
                      "description": "Returned by FIS CORE",
                      "example": "ARYA QREEM"
                  },
                  "Info4": {
                      "type": "string",
                      "description": "Returned by FIS CORE - Deposit Origination name - <TBD - find where this could be mapped to>",
                      "example": "DEP-001576"
                  },
                  "Info5": {
                      "type": "string",
                      "description": "Returned by FIS CORE",
                      "example": "ORIGINAL ENTRY"
                  },
                  "Info6": {
                      "type": "string",
                      "description": "To be deprecated Returned by FIS CORE - Mapped to Effective Date",
                      "example": "EFF DATE = 221013"
                  }
              },
              "description": "Represents a summarized version of deposit account transaction"
          },
          "SelRangeDt": {
              "type": "object",
              "properties": {
                  "LastStmtDt": {
                      "type": "string",
                      "description": "Last Statement Date",
                      "format": "date",
                      "example": "2021-04-04",
                      "x-used-by": "DepAcctTRaninq"
                  }
              },
              "description": "Aggregate for statement date"
          },
          "TrnImgRec": {
              "type": "object",
              "properties": {
                  "TrnImgId": {
                      "type": "string",
                      "description": "Deposit Image Reference Identifier",
                      "example": "001",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  },
                  "TrnImgFlag": {
                      "type": "boolean",
                      "description": "Image flag True or False",
                      "example": false,
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq"
                  }
              },
              "description": "Bank Account Transaction Image Record"
          },
          "GetAcctStatmentResponse": {
              "type": "object",
              "properties": {
                  "NextPageNum": {
                      "type": "integer",
                      "description": "Returned when using FIS CORE. Return this value while requesting next page.",
                      "example": 11
                  },
                  "HasMoreItems": {
                      "type": "boolean",
                      "description": "Set to true if there more items",
                      "example": true
                  },
                  "RecCtrlOut": {
                      "$ref": "#/components/schemas/RecCtrlOut"
                  },
                  "DepAcctId": {
                      "$ref": "#/components/schemas/DepAcctId"
                  },
                  "DepAcctStmtRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepAcctStmtRec"
                      },
                      "description": "List of Dep Account Statement Record"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "RecCtrlOut": {
              "type": "object",
              "properties": {
                  "RecCursor": {
                      "type": "string",
                      "description": "BASE 64 Encoded record cursor",
                      "example": "MjAyMS0xMC0wMQAAMDowMDowMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq,DepindexDocumentLibrary"
                  },
                  "MatchedRec": {
                      "type": "string",
                      "description": "Matching Records",
                      "example": "40",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq,DepindexDocumentLibrary"
                  },
                  "SentRec": {
                      "type": "string",
                      "description": "Sent Records",
                      "example": "34",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq,DepindexDocumentLibrary"
                  },
                  "PageNumber": {
                      "type": "integer",
                      "description": "Page Number",
                      "example": "23",
                      "x-used-by": "CurrAcctStmt,DepAcctTRaninq,DepindexDocumentLibrary"
                  }
              },
              "description": "Record Control Out - Returned when using Evertec CORE. Return this value while requesting next page."
          },
          "EndDt": {
              "type": "string",
              "description": "Statement End Date",
              "format": "date",
              "example": "2021-06-01",
              "x-used-by": "CurrAcctStmt"
          },
          "LastStmtDt": {
              "type": "string",
              "description": "Last Statement Date",
              "format": "date",
              "example": "2021-06-01",
              "x-used-by": "CurrentAccountInq,CurrAcctStmt"
          },
          "MemoRec": {
              "type": "string",
              "description": "Transaction Memo Record",
              "example": "Test Transaction Memo"
          },
          "DepAcctStmtRec": {
              "type": "object",
              "properties": {
                  "DepAcctId": {
                      "$ref": "#/components/schemas/DepAcctId"
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      },
                      "description": "Saving account opening/closing book balance",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "EndDt": {
                      "$ref": "#/components/schemas/EndDt"
                  },
                  "LastStmtDt": {
                      "$ref": "#/components/schemas/LastStmtDt"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Statement Effective Date",
                      "format": "date",
                      "example": "2021-09-08"
                  },
                  "Rate": {
                      "type": "number",
                      "description": "Interest Rate",
                      "example": "12.00",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "PdfId": {
                      "type": "string",
                      "description": "e-Statement Identifier",
                      "example": "174028646",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "PdfView": {
                      "type": "boolean",
                      "description": "e-Statement viewed flag",
                      "example": true,
                      "x-used-by": "CurrAcctStmt"
                  },
                  "PdfViewDt": {
                      "type": "string",
                      "description": "e-Statement viewed date",
                      "format": "date",
                      "example": "2021-06-01",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "PdfViewPartyId": {
                      "type": "string",
                      "description": "e-Statement viewed by",
                      "example": "2467914001001",
                      "x-used-by": "CurrAcctStmt"
                  },
                  "TotalServiceChargeMonthlyAmt": {
                      "type": "number",
                      "description": "service charge monthly",
                      "format": "double",
                      "example": 0,
                      "x-used-by": "CurrAcctStmt"
                  },
                  "TotalServiceChargeYearlyAmt": {
                      "type": "number",
                      "description": "service charge yearly",
                      "format": "double",
                      "example": 0,
                      "x-used-by": "CurrAcctStmt"
                  },
                  "DepAcctTrnRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepAcctTrnRec"
                      },
                      "description": "List of Account Transactions",
                      "x-used-by": "CurrAcctStmt"
                  }
              },
              "description": "Represents a summarized version of deposit account statement"
          },
          "StopChkRequest": {
              "type": "object",
              "properties": {
                  "CheckRange": {
                      "type": "object",
                      "properties": {
                          "ChkNumStart": {
                              "type": "string",
                              "description": "If this ChkRange aggregate is used then either ChkNumStart or CheckNumEnd is required  ",
                              "example": "100"
                          },
                          "ChkNumEnd": {
                              "type": "string",
                              "description": "If this ChkRange aggregate is used then either ChkNumStart or CheckNumEnd is required  ",
                              "example": "120"
                          }
                      },
                      "description": "Check Range Information    If the channel consuming this service is EBSS, this aggregate is used for sending  the check range    Note - Either use <ChkRange> or <StopChkInfo><ChkNum>, but not both for EBSS    This aggregate is not used when channel is Mibanco,Vru and Commercial"
                  },
                  "StopChkInfo": {
                      "type": "object",
                      "properties": {
                          "ChkNum": {
                              "type": "string",
                              "description": "Channel = MiBanco,VRU,COMMERCIAL - Always use this field to pass the CheckNumber  When Channel = EBSS,  and has only FIRSTCHKNUM -  this field will be used to pass the CheckNumber  ",
                              "example": "0000004242"
                          },
                          "Name": {
                              "type": "string",
                              "description": "Name on the check",
                              "example": "TEST"
                          },
                          "ChkAmt": {
                              "type": "number",
                              "description": "Check amount aggregate. If Channel consuming this service is MiBanco,VRU,COMMERCIAL -  This is a mandatory field to be passed by the channel  ",
                              "example": 100.54
                          },
                          "OrigDt": {
                              "type": "string",
                              "description": "Check Origination Date. The date on which the customer originates the check.",
                              "format": "date",
                              "example": "2022-09-28"
                          },
                          "Requestor": {
                              "type": "string",
                              "description": "Name of person requesting the stop payment.  When the channel consuming this service is Ebss - This field is applicable",
                              "example": "NANCY LAUSELL S"
                          },
                          "WaiveChgCd": {
                              "type": "string",
                              "description": "Waive Charge Code    When the channel consuming this service is Ebss - This field is applicable",
                              "example": "W"
                          },
                          "MatSus": {
                              "type": "string",
                              "description": "When the channel consuming this service is Ebss - This field is applicable. If the suspect to put the stop payment is by amount or check.",
                              "example": "string"
                          },
                          "AmtSus": {
                              "type": "string",
                              "description": "When the channel consuming this service is Ebss - This field is applicable",
                              "example": "string"
                          },
                          "ChkNumSus": {
                              "type": "string",
                              "description": "When the channel consuming this service is Ebss - This field is applicable",
                              "example": "string"
                          },
                          "RenewalCt": {
                              "type": "number",
                              "description": "Sent by the Channel  Only used for IdaStopPmt - When Channel = EBSS",
                              "example": 1
                          },
                          "Desc": {
                              "type": "string",
                              "description": "Description/Reason for Stop Payment  When the channel consuming this service is Ebss - This field is applicable"
                          }
                      },
                      "description": "Stop Check Information will be sent in this Aggregate  This is used for both StopChkAdd & IdaStopPmt                "
                  }
              }
          },
          "StopCheckPaymentRequest": {
              "type": "object",
              "properties": {
                  "StopChkAddRequest": {
                      "$ref": "#/components/schemas/StopChkRequest"
                  }
              }
          },
          "StopChkRec": {
              "type": "object",
              "properties": {
                  "ApprovalId": {
                      "type": "number",
                      "description": "Approval Identifier.This is an identifier that refers to an  approval event that occurred at the authorizing server.  Returned for both IDAStopPmtMain & TVStopCheckAdd",
                      "example": 21355135311,
                      "x-used-by": "CAPaymentsStopCheckInitiate"
                  }
              },
              "description": "Stop Check information Record",
              "x-used-by": "CAPaymentsStopCheckInitiate"
          },
          "StopChkResponse": {
              "type": "object",
              "properties": {
                  "StopChkRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/StopChkRec"
                      }
                  },
                  "Fee": {
                      "type": "object",
                      "properties": {
                          "FeeAmt": {
                              "type": "number",
                              "description": "When used for a fixed amount fee, this is the fixed amount that will be charged",
                              "example": 15,
                              "x-used-by": "CAPaymentsStopCheckInitiate"
                          }
                      },
                      "description": "Fee. The fee(s) required to execute the exchange may be  provided to the customer for informational purposes.    Applicable & returned only for TV StopChkAdd (Channel - MiBanco/VRU/Commercial)",
                      "x-used-by": "CAPaymentsStopCheckInitiate"
                  },
                  "EffDt": {
                      "type": "string",
                      "description": "Applicable & returned only for TV StopChkAdd (Channel - MiBanco/VRU/Commercial)",
                      "format": "date",
                      "example": "2021-12-21",
                      "x-used-by": "CAPaymentsStopCheckInitiate"
                  },
                  "TrnDt": {
                      "type": "string",
                      "description": "Applicable & returned only for TV StopChkAdd (Channel - MiBanco/VRU/Commercial)",
                      "format": "date",
                      "example": "2021-12-21",
                      "x-used-by": "CAPaymentsStopCheckInitiate"
                  }
              }
          },
          "RevStopCheckPaymentRequest": {
              "type": "object",
              "properties": {
                  "Desc": {
                      "type": "string",
                      "description": "Reason for Stop Check Removal"
                  },
                  "RevStopChkRequest": {
                      "$ref": "#/components/schemas/StopChkRequest"
                  }
              }
          },
          "StopCheckPaymentResponse": {
              "type": "object",
              "properties": {
                  "StopChkAddResponse": {
                      "$ref": "#/components/schemas/StopChkResponse"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "RevStopCheckPaymentResponse": {
              "type": "object",
              "properties": {
                  "RevStopChkResponse": {
                      "$ref": "#/components/schemas/RevStopChkResponse"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "RevStopChkResponse": {
              "type": "object",
              "properties": {
                  "StopChkRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RevStopChkRec"
                      }
                  },
                  "RefInfo": {
                      "$ref": "#/components/schemas/RefInfo"
                  },
                  "Fee": {
                      "type": "object",
                      "properties": {
                          "FeeAmt": {
                              "type": "number",
                              "description": "When used for a fixed amount fee, this is the fixed amount that will be charged",
                              "example": 15,
                              "x-used-by": "CAStopCheckControl"
                          }
                      },
                      "description": "Fee. The fee(s) required to execute the exchange may be  provided to the customer for informational purposes.    Applicable & returned only for TV StopChkAdd (Channel - MiBanco/VRU/Commercial)"
                  }
              }
          },
          "RevStopChkRec": {
              "type": "object",
              "properties": {
                  "StopChkInfo": {
                      "type": "object",
                      "properties": {
                          "ChkAmt": {
                              "type": "number",
                              "description": "Check amount aggregate.  Applicable & Returned - if the channel consuming this service is Ebss",
                              "example": 100.3,
                              "x-used-by": "CAStopCheckControl"
                          }
                      },
                      "description": "Stop Check Information will be sent in this Aggregate",
                      "x-used-by": "CAStopCheckControl"
                  }
              },
              "description": "Reverse Stop Check information Record",
              "x-used-by": "CAStopCheckControl"
          },
          "ListStopCheckPaymentResponse": {
              "type": "object",
              "properties": {
                  "ListStopChkRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ListStopChkRec"
                      }
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "ListStopChkRec": {
              "type": "object",
              "properties": {
                  "DepAcctId": {
                      "type": "object",
                      "properties": {
                          "AcctId": {
                              "type": "string",
                              "description": "Applicable & Returned - if the channel consuming this service is Ebss",
                              "example": "219035987",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "AcctClassCd": {
                              "type": "integer",
                              "description": "Account Class Code - Check additional documentation",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "GrpCd": {
                              "type": "integer",
                              "description": "Group Code - Check additional documentation",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "BankInfo": {
                              "$ref": "#/components/schemas/BankInfo"
                          }
                      },
                      "description": "Deposit Account Identification Aggregate.  Applicable & Returned - if the channel consuming this service is Ebss",
                      "x-used-by": "CAStopCheckRetrieve"
                  },
                  "StopChkStatusCode": {
                      "type": "string",
                      "description": "Stop Check Status Code. The status of a Stop Check request that is returned as part of a Stop Check inquiry.  Applicable & Returned - if the channel consuming this service is Ebss",
                      "example": "A",
                      "x-used-by": "CAStopCheckRetrieve"
                  },
                  "StopChkInfo": {
                      "type": "object",
                      "properties": {
                          "ChkAmt": {
                              "type": "number",
                              "description": "Check amount aggregate.  Applicable & Returned - if the channel consuming this service is Ebss",
                              "example": 100.3,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "ChkRange": {
                              "type": "object",
                              "properties": {
                                  "ChkNumStart": {
                                      "type": "integer",
                                      "description": "Check Number",
                                      "format": "int64",
                                      "example": 1003,
                                      "x-used-by": "CAStopCheckRetrieve"
                                  },
                                  "ChkNumEnd": {
                                      "type": "integer",
                                      "description": "Last check number for stop payment",
                                      "format": "int64",
                                      "example": 1003,
                                      "x-used-by": "CAStopCheckRetrieve"
                                  }
                              },
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Name": {
                              "type": "string",
                              "description": "Name on the Check",
                              "example": "SAMPLE",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "OrigDt": {
                              "type": "string",
                              "description": "Check Origination Date. The date on which the customer originates the check.",
                              "format": "date",
                              "example": "2022-09-18",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "NumDays": {
                              "type": "number",
                              "description": "umber of days hold is placed previously.",
                              "example": 180,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Requestor": {
                              "type": "string",
                              "description": "Requestor who placed the stop payment",
                              "example": "TEST",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "WaiveChgCd": {
                              "type": "string",
                              "description": "Waive Charge Code - Check additional documentation",
                              "example": "W",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "AmtSus": {
                              "type": "string",
                              "description": "This field is applicable when check amount is under suspect. This field is for future use and it’s a bit value and not amount field",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "ChkNumSus": {
                              "type": "string",
                              "description": "Check number under suspect. This field is for future use",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "MatSus": {
                              "type": "string",
                              "description": "If the suspect to put the stop payment is by amount or check. This field is for future use",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "ExtBundleCd": {
                              "type": "string",
                              "description": "Indicates if the account has bundle service or not in external transactions - Check additional documentation",
                              "example": "N",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "IntBundleCd": {
                              "type": "string",
                              "description": "Indicates if the account has bundle service or not in internal transactions - Check additional documentation",
                              "example": "N"
                          },
                          "OperId": {
                              "type": "string",
                              "description": "Operator ID and it a default field. This field is for future use",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "PostDtInd": {
                              "type": "string",
                              "description": "Means the stop is placed after the posted date - Check additional documentation",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "RecFlg": {
                              "type": "string",
                              "description": "If the stop payment history needs to be purged or not - Check additional documentation",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "RecType": {
                              "type": "string",
                              "description": "This is the code set so that IDA will fetch the corresponding record from the database",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "TypCd": {
                              "type": "string",
                              "description": "This field is for future use",
                              "example": "string",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Tanmm": {
                              "type": "integer",
                              "description": "Current minutes. This field is for future use",
                              "example": 123,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "TanSeq": {
                              "type": "integer",
                              "description": "This field is set to 7 for updating the stops in the online B24 file. This field is for future use",
                              "example": 123,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Tanss": {
                              "type": "integer",
                              "description": "This field is set to 7 for updating the stops in the online B24 file. This field is for future use",
                              "example": 123,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "TrfInd": {
                              "type": "integer",
                              "description": "Transfer indicator. Possible values are - Y/N",
                              "example": 123,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Desc": {
                              "type": "string",
                              "description": "Reason for the Stop Payment",
                              "example": "Personal",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "RenewalCt": {
                              "type": "integer",
                              "description": "Renewal Counter  Applicable & Returned - if the channel consuming this service is Ebss  ",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "BaseEnvr": {
                              "type": "object",
                              "properties": {
                                  "CreatedDt": {
                                      "type": "string",
                                      "description": "Created Date/Time. The date/time the object was created  Applicable & Returned - if the channel consuming this service is Ebss",
                                      "format": "date",
                                      "example": "2023-09-05",
                                      "x-used-by": "CAStopCheckRetrieve"
                                  },
                                  "CreateRefId": {
                                      "type": "number",
                                      "description": "Approval Identifier.This is an identifier that refers to an  approval event that occurred at the authorizing server  This field will display the id that has been generated during Stopcheck Add",
                                      "example": 22187132816,
                                      "x-used-by": "CAStopCheckRetrieve"
                                  }
                              },
                              "description": "Base Environment aggregate",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "LastRenDt": {
                              "type": "string",
                              "description": "Last Renewal Date  This Date will be populated if RenwalCT is set to a non-zero value  YYYY-MM-DD",
                              "format": "date",
                              "example": "2023-09-04",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "NextRenDt": {
                              "type": "string",
                              "description": "Next Renewal Date  This Date will be populated if RenwalCT is set to a non-zero value  YYYY-MM-DD",
                              "format": "date",
                              "example": "2023-09-05",
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "OrigBranch": {
                              "type": "number",
                              "description": "Applicable & Returned - if the channel consuming this service is Ebss",
                              "example": 606,
                              "x-used-by": "CAStopCheckRetrieve"
                          },
                          "Updt": {
                              "type": "string",
                              "description": "Applicable & Returned - if the channel consuming this service is Ebss. Format YYYY-MM-DDTHH:mm:ssZ which is Date Time in UTC",
                              "format": "date-time",
                              "example": "2023-01-21T17:32:28.0000000+00:00",
                              "x-used-by": "CAStopCheckRetrieve"
                          }
                      },
                      "description": "List Stop Check Information will be sent in this Aggregate",
                      "x-used-by": "CAStopCheckRetrieve"
                  }
              },
              "description": "List Stop Check information Record",
              "x-used-by": "AcctInqCARD,AcctInqCDA,CAPaymentsStopCheckInitiate,CAStopCheckControl,CAStopCheckRetrieve,DepindexDocumentLibrary"
          },
          "CurrentAccountMaintenanceResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "XferDepAcctId": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "string",
                      "description": "Account Id",
                      "example": "148141110"
                  },
                  "AcctType": {
                      "type": "string",
                      "description": "Account type",
                      "example": "DDA"
                  },
                  "BankInfo": {
                      "$ref": "#/components/schemas/BankInfo"
                  },
                  "SectionInd": {
                      "type": "string",
                      "description": "Section Identifier",
                      "example": "C"
                  }
              }
          },
          "XferPaymentRequest": {
              "type": "object",
              "properties": {
                  "DepAcctIdFrom": {
                      "$ref": "#/components/schemas/XferDepAcctId"
                  },
                  "DepAcctIdTo": {
                      "$ref": "#/components/schemas/XferDepAcctId"
                  },
                  "XferAmt": {
                      "type": "number",
                      "example": 324.23
                  },
                  "TaxId": {
                      "type": "string",
                      "description": "Tax ID",
                      "example": "660878299"
                  },
                  "DueDt": {
                      "type": "string",
                      "description": "Effective date",
                      "format": "date",
                      "example": "2022-02-23"
                  },
                  "CustPayeeId": {
                      "type": "string",
                      "description": "Payee Identifier",
                      "example": "001"
                  }
              }
          },
          "XferPaymentResponse": {
              "type": "object",
              "properties": {
                  "XferId": {
                      "type": "string",
                      "example": "20541789831",
                      "x-used-by": "CorpCAPaymentXferInitiate"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "GetCDAAcctInqResponse": {
              "type": "object",
              "properties": {
                  "CertDepAcctRec": {
                      "$ref": "#/components/schemas/CertDepAcctRec"
                  },
                  "CustLangPref": {
                      "type": "string",
                      "description": "Customer Language preference",
                      "example": "12344",
                      "x-used-by": "AcctInqCDA"
                  },
                  "RespUnitCostCtr": {
                      "type": "string",
                      "description": "Responsible Unit cost center",
                      "example": "2422535",
                      "x-used-by": "AcctInqCDA"
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      },
                      "description": "List of Account Balances"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "CertDepAcctRec": {
              "type": "object",
              "properties": {
                  "CertDepAcctStatus": {
                      "type": "object",
                      "properties": {
                          "CertDepAcctStatusCode": {
                              "type": "string",
                              "description": "CD account status code - Check additional documentation",
                              "example": "A",
                              "x-used-by": "AcctInqCDA"
                          },
                          "StatusDesc": {
                              "type": "string",
                              "description": "Status description",
                              "example": "ACTIVE",
                              "x-used-by": "AcctInqCDA"
                          }
                      },
                      "x-used-by": "AcctInqCDA"
                  },
                  "CloseDt": {
                      "type": "string",
                      "description": "CD closed date",
                      "format": "date",
                      "example": "2023-04-10",
                      "x-used-by": "AcctInqCDA"
                  },
                  "DepMatureDt": {
                      "type": "string",
                      "description": "CD maturity date",
                      "format": "date",
                      "example": "2023-04-10",
                      "x-used-by": "AcctInqCDA"
                  },
                  "ExemptInd": {
                      "type": "string",
                      "description": "Excepted from Tax indicator",
                      "example": "0",
                      "x-used-by": "AcctInqCDA"
                  },
                  "IntAccruedYTD": {
                      "type": "number",
                      "description": "Interest accrued year to date",
                      "format": "Double",
                      "example": 0.04,
                      "x-used-by": "AcctInqCDA"
                  },
                  "IntYTD": {
                      "type": "number",
                      "description": "Interest YTD",
                      "format": "Double",
                      "example": 7.71,
                      "x-used-by": "AcctInqCDA"
                  },
                  "InvestmentType": {
                      "type": "string",
                      "description": "Investment type",
                      "example": "127",
                      "x-used-by": "AcctInqCDA"
                  },
                  "LastRenewalAmt": {
                      "type": "number",
                      "description": "Last renewal Amount",
                      "format": "double",
                      "example": 954.15,
                      "x-used-by": "AcctInqCDA"
                  },
                  "Officer": {
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array",
                      "items": {
                          "type": "string",
                          "example": "1678"
                      },
                      "description": "Relationship officer",
                      "x-used-by": "AcctInqCDA"
                  },
                  "OldAcctId": {
                      "type": "string",
                      "description": "Old account Id",
                      "example": "00000000000",
                      "x-used-by": "AcctInqCDA"
                  },
                  "OpenDt": {
                      "type": "string",
                      "description": "CD open date",
                      "example": "2002-04-09",
                      "x-used-by": "AcctInqCDA"
                  },
                  "OrigCurAmt": {
                      "type": "number",
                      "description": "CD deposit amount",
                      "format": "double",
                      "example": 954.15,
                      "x-used-by": "AcctInqCDA"
                  },
                  "OwnerName": {
                      "type": "string",
                      "description": "Owner Name",
                      "example": "John Doe",
                      "x-used-by": "AcctInqCDA"
                  },
                  "Owner": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Owner"
                      },
                      "description": "List of Owners",
                      "x-used-by": "AcctInqCDA"
                  },
                  "PostalAddress": {
                      "$ref": "#/components/schemas/PostAddr"
                  },
                  "ProductId": {
                      "type": "string",
                      "description": "Product Identifier",
                      "example": "023",
                      "x-used-by": "AcctInqCDA"
                  },
                  "ProductDesc": {
                      "type": "string",
                      "description": "Product Description",
                      "example": "MultiCuenta Popular Staff",
                      "x-used-by": "AcctInqCDA"
                  },
                  "Rate": {
                      "type": "number",
                      "description": "Interest Rate",
                      "format": "Double",
                      "example": 0.0089999,
                      "x-used-by": "AcctInqCDA"
                  },
                  "RenewalDt": {
                      "type": "string",
                      "description": "Renewal Date",
                      "format": "date",
                      "example": "2020-04-10",
                      "x-used-by": "AcctInqCDA"
                  },
                  "ReturnedMailInd": {
                      "type": "string",
                      "description": "Return mail indicator - Check additional documentation",
                      "example": "9",
                      "x-used-by": "AcctInqCDA"
                  },
                  "Term": {
                      "type": "object",
                      "properties": {
                          "Count": {
                              "type": "integer",
                              "description": "CD Term count",
                              "format": "int64",
                              "example": 36,
                              "x-used-by": "AcctInqCDA"
                          },
                          "TermUnits": {
                              "type": "string",
                              "description": "Term Unit",
                              "example": "M",
                              "x-used-by": "AcctInqCDA"
                          }
                      },
                      "x-used-by": "AcctInqCDA"
                  }
              }
          },
          "GetCardAcctInqResponse": {
              "type": "object",
              "properties": {
                  "CardPlasticAcctRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/CardPlasticAcctRec"
                      },
                      "description": "List of CardPlastic Account"
                  },
                  "AcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctBal"
                      },
                      "description": "List of Account Balances"
                  },
                  "ExtAcctBal": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ExtAcctBal"
                      },
                      "description": "List of Extended Account Balances"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountESignRequest": {
              "type": "object",
              "properties": {
                  "ESignAction": {
                      "type": "string",
                      "description": "ESignAction to be sent as \"Sign\" by channel",
                      "example": "Sign"
                  },
                  "ESignedDt": {
                      "type": "string",
                      "description": "Date on which Esign agreement has been captured",
                      "format": "date",
                      "example": "2023-04-26"
                  }
              }
          },
          "AccountESignResponse": {
              "type": "object",
              "properties": {
                  "ESignedFlag": {
                      "type": "string",
                      "description": "Esigned Flag",
                      "example": "Y",
                      "x-used-by": "AcctESign"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountInterestEvaluateRequest": {
              "type": "object",
              "properties": {
                  "NumDays": {
                      "type": "string",
                      "description": "Number of days for Interest calculation",
                      "example": "001"
                  },
                  "CurAmt": {
                      "type": "number",
                      "description": "Amount for Interest calculation",
                      "format": "Double",
                      "example": 100.06
                  }
              }
          },
          "AccountInterestEvaluateResponse": {
              "type": "object",
              "properties": {
                  "InterestAmt": {
                      "type": "number",
                      "description": "Calculated Interest amount",
                      "format": "Double",
                      "example": 0.02,
                      "x-used-by": "AcctInterestEval"
                  },
                  "InterestRate": {
                      "type": "string",
                      "description": "Interest of an Account",
                      "example": "0.10000",
                      "x-used-by": "AcctInterestEval"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountAdjustmentInitiateRequest": {
              "type": "object",
              "properties": {
                  "CurAmt": {
                      "type": "number",
                      "description": "Represents the adjustment amount that is to be posted for an account ID. Channel needs to pass the value.",
                      "format": "Double",
                      "example": 1.01
                  },
                  "AdjInd": {
                      "type": "string",
                      "description": "Adjustment indicator to indicate whether adjustment is Debit (DB) or Credit (CR)",
                      "example": "DB"
                  },
                  "AdjDate": {
                      "type": "string",
                      "description": "Date on which adjustment is made. Always accepts current Date",
                      "example": "2022-06-12"
                  }
              }
          },
          "AccountAdjustmentInitiateResponse": {
              "type": "object",
              "properties": {
                  "RequestType": {
                      "type": "string",
                      "description": "Request type",
                      "example": "RTANDEM",
                      "x-used-by": "AcctAdjustInit"
                  },
                  "StatusDesc": {
                      "type": "string",
                      "description": "Status Description",
                      "example": "Adjusted approved.",
                      "x-used-by": "AcctAdjustInit"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "TransactionTypeNoPostControlResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "TransactionTypeNoPostUpdateRequest": {
              "type": "object",
              "properties": {
                  "TransactionTypeId": {
                      "type": "integer",
                      "description": "Indicates the type of transactions to be restricted like 1-Debit Only , 2 - Credit Only, 3 - All txn, 4- Check txn",
                      "format": "int32",
                      "example": 2
                  },
                  "InstructionCode": {
                      "type": "integer",
                      "description": "Captures the instructions for the next step when payment posting fails due to control placed on the account.\n1 RETURN, CLOSED ACCOUNT\n2 REFER ALL CHECKS TO BR. MGR\n3 REFER ALL DEBITS TO BR. MGR\n4 REFER ALL DEPOSITS TO BR. MGR\n5 REFER ALL CREDITS TO BR. MGR",
                      "format": "int32",
                      "example": 5
                  }
              }
          },
          "TransactionTypeNoPostUpdateResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountControlReasonInitiateRequest": {
              "type": "object",
              "properties": {
                  "ControlReasonId": {
                      "type": "integer",
                      "description": "Captures the control reason code to be added to the account. - Check additional documentation",
                      "format": "int32",
                      "example": 4
                  },
                  "ControlReasonDesc1": {
                      "type": "string",
                      "description": "Additional field to capture the remarks for adding control reason.",
                      "example": "MISHANDLING ACCOUNT"
                  },
                  "ControlReasonDesc2": {
                      "type": "string",
                      "description": "Additional field to capture the remarks for adding control reason.",
                      "example": "LOST/STOLEN CHECK(S)"
                  }
              }
          },
          "AccountControlReasonInitiateResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountControlReasonOccuranceControlResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "HoldFinancialTransactionResponse": {
              "type": "object",
              "properties": {
                  "AcctHoldId": {
                      "type": "string",
                      "description": "Hold Refernce Id",
                      "example": "230607000000028",
                      "x-used-by": "CashManagementHoldInitiate"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "ImgLocation": {
              "type": "object",
              "properties": {
                  "TopicId": {
                      "type": "string",
                      "description": "",
                      "example": "MICADATEISN",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "TopicItem": {
                      "type": "string",
                      "description": "",
                      "example": "202101248500095513",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "ReportId": {
                      "type": "string",
                      "description": "",
                      "example": "MICT10002",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "ReportVersion": {
                      "type": "string",
                      "description": "",
                      "example": "20210324000002",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "ReportSection": {
                      "type": "string",
                      "description": "Deposit / Check Image details ",
                      "example": "2021032400000213N     1300000C",
                      "x-used-by": "DepindexDocumentLibrary"
                  }
              },
              "x-used-by": "DepindexDocumentLibrary"
          },
          "DepItemImgRec": {
              "type": "object",
              "properties": {
                  "DepAcctIdTo": {
                      "type": "string",
                      "description": "Deposit Account Number",
                      "example": "129270164",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "DepAcctIdFrom": {
                      "type": "string",
                      "description": "Deposit Account Number",
                      "example": "129270164",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "SeqNum": {
                      "type": "string",
                      "description": "Sequence Number",
                      "example": "500095513",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "SerialNum": {
                      "type": "string",
                      "description": "Transaction Serial Number",
                      "example": "00000000000",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "CurAmt": {
                      "type": "number",
                      "description": "Deposit Account Current Amount",
                      "example": 12000,
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "PostedDt": {
                      "type": "string",
                      "description": "Transaction Posted Date\nFor transfers/Deposit , the date on\nwhich the entries were made on the books of the receiving\nFinancial Institution.",
                      "example": "2021-11-04",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "RefInfo": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RefInfo"
                      },
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "BankInfo": {
                      "$ref": "#/components/schemas/BankInfo"
                  },
                  "OperatorId": {
                      "type": "string",
                      "description": "Operator or Agen ID",
                      "example": "0101",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "USAInd": {
                      "type": "string",
                      "description": "USA Indicator",
                      "example": "A",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "RTFed": {
                      "type": "string",
                      "description": "Federal Routing Number",
                      "example": "000000000",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "RecCtrlOut": {
                      "$ref": "#/components/schemas/RecCtrlOut"
                  }
              },
              "x-used-by": "DepindexDocumentLibrary"
          },
          "RefInfo": {
              "type": "object",
              "properties": {
                  "RefId": {
                      "type": "string",
                      "description": "Approval Identifier.This is an identifier that refers to an  approval event that occurred at the authorizing server.",
                      "example": 0,
                      "x-used-by": "DepindexDocumentLibrary,CAStopCheckControl"
                  },
                  "RefType": {
                      "type": "string",
                      "description": "",
                      "example": "",
                      "x-used-by": "DepindexDocumentLibrary"
                  }
              },
              "description": "Carries StopCheck Reversal Refernce number & details",
              "x-used-by": "DepindexDocumentLibrary,CAStopCheckControl"
          },
          "BankAcctTrnImageRec": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "string",
                      "description": "Deposit Account Number",
                      "example": "129270164",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "SeqNum": {
                      "type": "string",
                      "description": "Sequence Number",
                      "example": "500095513",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "SerialNum": {
                      "type": "string",
                      "description": "Transaction Serial Number",
                      "example": "00000000000",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "CurAmt": {
                      "type": "number",
                      "description": "Deposit Account Current Amount",
                      "example": 120.67,
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "PostedDt": {
                      "type": "string",
                      "description": "Transaction Posted Date\nFor transfers/Deposit , the date on\nwhich the entries were made on the books of the receiving\nFinancial Institution.",
                      "example": "2021-11-04",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "BankInfo": {
                      "$ref": "#/components/schemas/BankInfo"
                  },
                  "DepItemImgRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepItemImgRec"
                      },
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "RefInfo": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RefInfo"
                      },
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "ImgLocation": {
                      "$ref": "#/components/schemas/ImgLocation"
                  },
                  "OperatorId": {
                      "type": "string",
                      "description": "Operator or Agen ID",
                      "example": "0101",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "USAInd": {
                      "type": "string",
                      "description": "USA Indicator",
                      "example": "A",
                      "x-used-by": "DepindexDocumentLibrary"
                  },
                  "RTFed": {
                      "type": "string",
                      "description": "Federal Routing Number",
                      "example": "000000000"
                  }
              }
          },
          "BankAcctTrnImgInqRs": {
              "type": "object",
              "properties": {
                  "BankAcctTrnImgRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BankAcctTrnImageRec"
                      }
                  },
                  "HasMoreItems": {
                      "type": "boolean",
                      "description": "Set to true if there more items",
                      "example": true
                  },
                  "RecCtrlOut": {
                      "$ref": "#/components/schemas/RecCtrlOut"
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "ControlIDAStatementDeliveryMethodIFXRequest": {
              "type": "object",
              "properties": {
                  "TranCd": {
                      "type": "integer",
                      "description": "Transaction code that needs to be sent by the channel\nAccepted Transaction code is \"242\"",
                      "format": "int32",
                      "example": 242
                  },
                  "StmtDispCd": {
                      "type": "string",
                      "description": "Indicate the method the statement will be delivered to the client.\nE - Electronic\nM - Mail\nB - Branch copy\nU - Unit copy",
                      "example": "E"
                  },
                  "StmtDispSection": {
                      "type": "integer",
                      "description": "Statement Disposition section. Values are between 1 and 4",
                      "format": "int32",
                      "example": 1
                  },
                  "BranchId": {
                      "type": "string",
                      "description": "Indicate the responsible unit destination for the branch or unit copy",
                      "example": "0"
                  },
                  "PostAddrType": {
                      "type": "string",
                      "description": "Postal Address Type",
                      "example": "P"
                  },
                  "IncChkImg": {
                      "type": "string",
                      "description": "Indicates if the statmement with will include checks images.\nAccepted values are \"Y\" or \"N\"",
                      "example": "Y"
                  }
              }
          },
          "ControlIDAStatementDeliveryMethodIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "IntAfflIdTo": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "integer",
                      "description": "The affiliated account to be credited",
                      "format": "int32",
                      "example": 89571916
                  },
                  "AcctType": {
                      "type": "string",
                      "description": "The affiliated account section to be credited. 'C' checking, 'S' Savings for the query coming from both the channel MIBANCO and EBSS",
                      "example": "C"
                  },
                  "IntDispCd": {
                      "type": "string",
                      "description": "For channel EBSS The Valid Value for the field DispCd are as follows: NoInterestPaid PostToAccount PostToAffiliatedAccount Check None Other For channel MIBANCO The Valid Value for the field  DispCd are as follows: A D For channel is MIBANCO for DispCd field we expect the value as A and D  When the channel is EBSS for Dispcd the value expected is PostToAffliatedAccount",
                      "example": "PostToAffiliatedAccount or A"
                  }
              }
          },
          "UpdateAccountConfigurationIFXRequest": {
              "type": "object",
              "properties": {
                  "PayOutDt": {
                      "type": "string",
                      "format": "datetime",
                      "description": "The payout date to transfer the whole balance to the affiliated account.",
                      "example": "2023-12-23T00:00:00.000Z"
                  },
                  "Freq": {
                      "type": "string",
                      "description": "The Valid values when the channel is MIBANCO are as follows A or D Whenereas the Valid values when the channel is EBSS are as follows Annual FutureDate When the channel is MIBANCO for payOutFreq field we expect the value as A or D and  When the channel is EBSS for payOutFreq the value expected is Annual or Future date",
                      "example": "A"
                  },
                  "IntAfflIdTo": {
                      "$ref": "#/components/schemas/IntAfflIdTo"
                  }
              }
          },
          "UpdateAccountConfigurationIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "UpdateAccountResponsibleUnitIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AcctHoldInfo": {
              "type": "object",
              "properties": {
                  "HoldDt": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date when hold is placed on the account",
                      "example": "2023-04-17T00:00:00.000Z"
                  },
                  "HoldEnterDt": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date when hold is entered on the account",
                      "example": "2023-04-17T00:00:00.000Z"
                  },
                  "HoldTime": {
                      "type": "string",
                      "description": "Time when hold is placed on the account",
                      "example": 37265
                  },
                  "Officer": {
                      "type": "integer",
                      "description": "This is usually the officer number but also is used with a fixed value to identify if the hold was placed by the system.",
                      "format": "int32",
                      "example": 23156
                  },
                  "CompNo": {
                      "type": "integer",
                      "description": "Transaction component number. Always 99",
                      "format": "int32",
                      "example": 99
                  },
                  "FullName": {
                      "type": "string",
                      "description": "Customer Name",
                      "example": "CRUZ"
                  },
                  "CheckingAmt": {
                      "type": "number",
                      "description": "Use for deposit account except savings",
                      "format": "double",
                      "example": 80.11
                  },
                  "SavingAmt": {
                      "type": "number",
                      "description": "Use for savings accounts",
                      "format": "double",
                      "example": 90.11
                  },
                  "OrigId": {
                      "type": "string",
                      "description": "Used to identify the origin of the transaction.",
                      "example": "D"
                  },
                  "TrnInd": {
                      "type": "string",
                      "description": "Alwayss 'D'. D  =  DEBIT CARD TRANSACTION, DURING HOURS",
                      "example": "Y"
                  },
                  "HoldExtend": {
                      "type": "string",
                      "description": "The ADMIN hold is active for 24 hrs by default but it can be extended to an additional 24 hrs by setting 'Y' in this field. Valid values would Y or N",
                      "example": "Y"
                  },
                  "HoldProcessInd": {
                      "type": "string",
                      "description": "The process originating the hold.  VALUE '1' = NSF process VALUE '2'   Unposted process VALUE '3'   HOLD-STP-APPL VALUE '4'   Corporate process VALUE '5'   Telepago application VALUE '6'   Wire Transfer application VALUE '7'   Manual hold VALUE '8'   Web cash application",
                      "example": "7"
                  },
                  "TrnType": {
                      "type": "string",
                      "description": "Transaction Type \"T\" = today \"Y\"= yesterday \"O\" = online",
                      "example": "O"
                  },
                  "TandemInd": {
                      "type": "string",
                      "description": "Value always Y to update Tandem System",
                      "example": "Y"
                  }
              }
          },
          "InitiateDepAcctAdminHoldIFXRequest": {
              "type": "object",
              "properties": {
                  "AcctHoldInfo": {
                      "$ref": "#/components/schemas/AcctHoldInfo"
                  }
              }
          },
          "InitiateDepAcctAdminHoldIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AccountNumberRec": {
              "type": "object",
              "properties": {
                  "AcctId": {
                      "type": "string",
                      "description": "IDA Account Number",
                      "example": "553373720"
                  }
              }
          },
          "GenerateIDAAccountNumbersIFXResponse": {
              "type": "object",
              "properties": {
                  "AccountNumberRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountNumberRec"
                      }
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "UpdateIDAStatementDeliveryMethodIFXRequest": {
              "type": "object",
              "properties": {
                  "TranCd": {
                      "type": "integer",
                      "description": "Transaction code that needs to be sent by the channel\nAccepted Transaction code is \"242\"",
                      "format": "int32",
                      "example": 242
                  },
                  "StmtDispCd": {
                      "type": "string",
                      "description": "Indicate the method the statement will be delivered to the client.\nE - Electronic\nM - Mail\nB - Branch copy\nU - Unit copy",
                      "example": "E"
                  },
                  "StmtDispSection": {
                      "type": "integer",
                      "description": "Statement Disposition section. Values are between 1 and 4",
                      "format": "int32",
                      "example": 1
                  },
                  "BranchId": {
                      "type": "string",
                      "description": "Indicate the responsible unit destination for the branch or unit copy",
                      "example": "0"
                  },
                  "PostAddrType": {
                      "type": "string",
                      "description": "Postal Address Type",
                      "example": "P"
                  },
                  "IncChkImg": {
                      "type": "string",
                      "description": "Indicates if the statmement with will include checks images.\nAccepted values are \"Y\" or \"N\"",
                      "example": "Y"
                  }
              }
          },
          "UpdateIDAStatementDeliveryMethodIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "InitiateIDAAccountIFXRequest": {
              "type": "object",
              "properties": {
                  "CIFAcctId": {
                      "type": "string",
                      "description": "This number should be the CIS customer number.",
                      "example": "553370171 MB"
                  },
                  "AcctType": {
                      "type": "integer",
                      "description": "Account type code determine the deposit product to be opened.",
                      "example": 90
                  },
                  "DocTypCd": {
                      "type": "string",
                      "description": "Indicates the statement type like paper, electronic.",
                      "example": "Paper"
                  },
                  "OfficerNo": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Need to be the officer number opening the account.",
                      "example": 15518
                  },
                  "FullName": {
                      "type": "string",
                      "description": "Account holder name (truncated)",
                      "example": "JOHN BRYAN"
                  },
                  "InsInd": {
                      "type": "string",
                      "description": "If should be Y or N. Indicates if the account has an insurance associated.",
                      "example": "Y"
                  },
                  "AcctEntitycode": {
                      "type": "integer",
                      "description": "Account entity code is from CIS. All possible values are 001 for retail/indiv, 002- partnership,003 - corporations, 004- limited corporation, 005- associations,006-government, 007- banks,008-Non Profit Organisation, 009-trade name, 010- successions, 011- trust, 012 - special partnership,013- FHMA accounts,",
                      "example": 1
                  }
              }
          },
          "InitiateIDAAccountIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AdminHoldRec": {
              "type": "object",
              "properties": {
                  "HoldDt": {
                      "type": "string",
                      "description": "Date when hold is placed on the account",
                      "format": "datetime",
                      "example": "2023-03-27T00:00:00.000Z"
                  },
                  "HoldEnterDt": {
                      "type": "string",
                      "description": "Date when hold is entered on the account",
                      "format": "datetime",
                      "example": "2023-03-25T00:00:00.000Z"
                  },
                  "HoldTime": {
                      "type": "string",
                      "description": "Time when hold is placed on the account",
                      "example": 38140
                  },
                  "HoldEnteredDt": {
                      "type": "string",
                      "description": "Date when hold details are entered on the account.",
                      "format": "datetime",
                      "example": "2023-03-27T00:00:00.000Z"
                  },
                  "OfficerId": {
                      "type": "integer",
                      "description": "Officer who authorized the Hold",
                      "format": "int32",
                      "example": 23156
                  },
                  "HoldReferenceId": {
                      "type": "integer",
                      "description": "Transaction Component Number",
                      "format": "int32",
                      "example": 1
                  },
                  "CheckingAmt": {
                      "type": "number",
                      "description": "Hold amount on Checking account",
                      "format": "double",
                      "example": 700.12
                  },
                  "SavingAmt": {
                      "type": "number",
                      "description": "Hold amount on Saving account",
                      "format": "double",
                      "example": 10.02
                  },
                  "BranchId": {
                      "type": "integer",
                      "description": "Branch number where the hold is placed",
                      "example": 316
                  },
                  "OrigId": {
                      "type": "string",
                      "description": "Application which originated the hold. 1=ADMINISTRATIVE SYSTEM",
                      "example": "1"
                  },
                  "HoldExtend": {
                      "type": "string",
                      "description": "The ADMIN hold is active for 24 hrs by default but it can be extended to an additioonal 24 hrs by setting 'Y' in this field.",
                      "example": "Y"
                  },
                  "StatusCode": {
                      "type": "string",
                      "description": "Indicates the status code",
                      "example": "R"
                  },
                  "TrnInd": {
                      "type": "string",
                      "description": "Alwayss 'D'. D  =  DEBIT CARD TRANSACTION, DURING HOURS",
                      "example": "D"
                  },
                  "TrnType": {
                      "type": "string",
                      "description": "Transaction Type \"T\" = today \"Y\"= yesterday \"O\" = online",
                      "example": "O"
                  },
                  "MasterFileInd": {
                      "type": "string",
                      "description": "Used to specified if the master file should be updated.",
                      "example": "Y"
                  },
                  "HoldProcessInd": {
                      "type": "string",
                      "description": "The process originating the hold.  VALUE '1' = NSF process VALUE '2'   Unposted process VALUE '3'   HOLD-STP-APPL VALUE '4'   Corporate process VALUE '5'   Telepago application VALUE '6'   Wire Transfer application VALUE '7'   Manual hold VALUE '8'   Web cash application",
                      "example": "7"
                  }
              }
          },
          "RetrieveDepAcctAdminHoldIFXResponse": {
              "type": "object",
              "properties": {
                  "AdminHoldRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AdminHoldRec"
                      },
                      "nullable": true
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "ControlDepAcctAdminHoldIFXRequest": {
              "type": "object",
              "properties": {
                  "AdminHoldRec": {
                      "$ref": "#/components/schemas/AdminHoldRec"
                  }
              }
          },
          "ControlDepAcctAdminHoldIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "AcctHoldRec": {
              "type": "object",
              "properties": {
                  "AcctHoldId": {
                      "type": "string",
                      "description": "Hold Refernce Id",
                      "example": "230607000000028"
                  },
                  "HoldReasonType": {
                      "type": "integer",
                      "description": "Reason for the Hold-List Of Reason Codes given",
                      "format": "int32",
                      "example": 240
                  },
                  "CheckingAmt": {
                      "type": "number",
                      "description": "Checking Hold Amount",
                      "format": "double",
                      "example": 728.67
                  },
                  "SavingAmt": {
                      "type": "number",
                      "description": "Savings Hold Amount",
                      "format": "double",
                      "example": 33.45
                  },
                  "ReserveAmt": {
                      "type": "number",
                      "description": "Reserve amount",
                      "format": "double",
                      "example": 55.55
                  },
                  "Reason": {
                      "type": "string",
                      "description": "Hold Description which includes reference",
                      "example": "withdrawal"
                  },
                  "AvailDays1": {
                      "type": "string",
                      "description": "Number of days when funds will be available in case RegCC Hold",
                      "example": "05"
                  },
                  "AvailDays2": {
                      "type": "string",
                      "description": "Number of days when funds will be available in case of other Holds",
                      "example": "05"
                  },
                  "HoldDt": {
                      "type": "string",
                      "description": "Hold date",
                      "format": "datetime",
                      "example": "2023-03-25T00:00:00.000Z"
                  },
                  "ChkNum": {
                      "type": "integer",
                      "description": "Check Number",
                      "format": "int32",
                      "example": 0
                  },
                  "TrnType": {
                      "type": "string",
                      "description": "Transaction Type \"T\" = today \"Y\" = yesterday \"O\" = online",
                      "example": "0"
                  },
                  "HoldDays": {
                      "type": "integer",
                      "description": "Number of days hold placed on the account",
                      "format": "int32",
                      "example": 5
                  },
                  "HoldType": {
                      "type": "string",
                      "description": "Type of Hold. Like 210-DEPOSITED CHECK HOLD CHECKING",
                      "format": "int32",
                      "example": 210
                  },
                  "HoldRule": {
                      "type": "string",
                      "description": "It contains the Regcc regulation rule to be applied for deposited checks. Only holds types related to deposits has values.\nR – Regcc\nD – Delay\nA- Availability",
                      "example": "R"
                  },
                  "TandemInd": {
                      "type": "string",
                      "description": "Used to update the Tandem Sytem. Value Is Always \"Y\"",
                      "example": "Y"
                  }
              }
          },
          "InitiateRegularHoldFinancialTransactionIFXRequest": {
              "type": "object",
              "properties": {
                  "AcctHoldRec": {
                      "$ref": "#/components/schemas/AcctHoldRec"
                  }
              }
          },
          "InitiateRegularHoldFinancialTransactionIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "ControlRegularHoldFinancialTransactionIFXRequest": {
              "type": "object",
              "properties": {
                  "AcctHoldRec": {
                      "$ref": "#/components/schemas/AcctHoldRec"
                  }
              }
          },
          "ControlRegularHoldFinancialTransactionIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "RetrieveDepositAccountHoldIFXResponse": {
              "type": "object",
              "properties": {
                  "AcctHoldRec": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AcctHoldRec"
                      }
                  },
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "UpdateDepositAccountAssistCodeIFXResponse": {
              "type": "object",
              "properties": {
                  "Exceptions": {
                      "$ref": "#/components/schemas/Exceptions"
                  }
              }
          },
          "HTTPError": {
              "type": "object",
              "properties": {
                  "status_code": {
                      "type": "string"
                  },
                  "status": {
                      "type": "string"
                  },
                  "message": {
                      "type": "string"
                  }
              }
          }
      },
      "responses": {
          "HTTPError": {
              "description": "Bad Request",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "400",
                          "status": "Bad Request",
                          "message": "JSON Parsing Exception"
                      }
                  }
              }
          },
          "BadRequestError": {
              "description": "Bad Request",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/BadRequestIFXResponse"
                      }
                  }
              }
          },
          "UnauthorizedError": {
              "description": "Unauthorized",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "401",
                          "status": "Unauthorized",
                          "message": "Invalid credentials"
                      }
                  }
              }
          },
          "ForbiddenError": {
              "description": "Forbidden",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "403",
                          "status": "Forbidden",
                          "message": "A client is forbidden from accessing a valid URL."
                      }
                  }
              }
          },
          "NotFoundError": {
              "description": "Not Found",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "404",
                          "status": "Not Found",
                          "message": "Products not found."
                      }
                  }
              }
          },
          "TooManyRequestsError": {
              "description": "Too Many Requests",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "429",
                          "status": "Too Many Requests",
                          "message": "Too many requests in a given amount of time"
                      }
                  }
              }
          },
          "InternalServerError": {
              "description": "Internal Server Error",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/HTTPError"
                      },
                      "example": {
                          "status_code": "500",
                          "status": "Internal Server Error",
                          "message": "Error occured while retriving FIS Products"
                      }
                  }
              }
          }
      },
      "parameters": {
          "x-api-key": {
              "name": "x-api-key",
              "in": "header",
              "description": "Secure API Authorization Key, assigned to channel.",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "SG9ScCCDMJ11D1OlYqY7Y7zykI3CRZii8AwdDIUL"
          },
          "x-client-traceid": {
              "name": "x-client-traceid",
              "in": "header",
              "description": "x-client-traceid is used to search all traces and join spans for a single request.",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "123"
          },
          "x-AuthToken": {
              "name": "x-AuthToken",
              "in": "header",
              "description": "x-AuthToken is used to call evertec apis as part of authorization.",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": 2.4596690488088586e+44
          },
          "x-AuthType": {
              "name": "x-AuthType",
              "in": "header",
              "description": "Required when using Evertec CORE - Determines SignOn statergy.  This parameter is optional for AppCode viz. WCR, WCR_Console, PICS, CLJ and MIBANCO",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "SignonUIdPswdRole, SignonAcctIdAcctTypeSSN, SignonAcctIdAcctTypePIN, SignonCardIdAcctTypeCVVExpDt"
          },
          "x-AuthCredentials": {
              "name": "x-AuthCredentials",
              "in": "header",
              "description": "Required when using Evertec CORE - Typically combination of userId and password with colon separator between them or accountId, accountType and SSN. . This parameter is optional for AppCode viz. WCR, WCR_Console, PICS and CLJ. For MIBANCO, it would be colon separated accountId, accountType and SSN.",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "userId:password:CSR, 1111:IAD:2222, 1111:IDA:PIN, 1343234243654376:Card:324:2021-04"
          },
          "BankId": {
              "name": "BankId",
              "in": "header",
              "description": "Required when using Evertec CORE - Check additional documentation",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "001"
          },
          "BankIdType": {
              "name": "BankIdType",
              "in": "header",
              "description": "Required when using Evertec CORE - Check additional documentation",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "FIParty"
          },
          "RecCountLimit": {
              "name": "RecCountLimit",
              "in": "header",
              "description": "When the response should be paginated, the number of records to return, RecCountLimit between 1 and 50.",
              "schema": {
                  "type": "integer"
              },
              "example": 50
          },
          "RecCursor": {
              "name": "RecCursor",
              "in": "header",
              "description": "Pagination token / Cursor",
              "schema": {
                  "type": "string"
              },
              "example": "MjAyMS0xMC0wMQAAMDowMDowMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          "Sort": {
              "name": "Sort",
              "in": "header",
              "description": "Indicates whether to sort the returned collection and if so, sort order",
              "schema": {
                  "enum": [
                      "ASC",
                      "DESC"
                  ],
                  "type": "string"
              },
              "example": "DESC"
          },
          "IncDetail": {
              "name": "IncDetail",
              "in": "header",
              "description": "Indicates a flag to include transaction records for a statement",
              "schema": {
                  "type": "boolean"
              },
              "example": true
          },
          "ChkNumStart": {
              "name": "ChkNumStart",
              "in": "header",
              "description": "When Start OR end check number /both can be present",
              "schema": {
                  "type": "string"
              },
              "example": "290-3432"
          },
          "ChkNumEnd": {
              "name": "ChkNumEnd",
              "in": "header",
              "description": "Start OR end check number /both can be present",
              "schema": {
                  "type": "string"
              },
              "example": "433-2342"
          },
          "TrnCd": {
              "name": "TrnCd",
              "in": "header",
              "description": "Transaction Code - Check additional documentation",
              "schema": {
                  "type": "string"
              },
              "example": "579"
          },
          "CustPermId": {
              "name": "CustPermId",
              "in": "header",
              "style": "simple",
              "schema": {
                  "type": "string",
                  "description": "Customer perm id, which is a sensitive customer identifier.Either `CustPermId` or `CustLoginId` must be returned in the response.  example: '1000151'    "
              }
          },
          "Pswd": {
              "name": "Pswd",
              "in": "header",
              "style": "simple",
              "schema": {
                  "type": "string",
                  "description": "Customer password. TODO - Define algorithm to encrypt",
                  "example": "Password"
              }
          },
          "SignonRole": {
              "name": "SignonRole",
              "in": "header",
              "style": "simple",
              "schema": {
                  "enum": [
                      "CUSTOMER",
                      "CSR",
                      "AGENT",
                      "TELLER"
                  ],
                  "type": "string",
                  "description": "Signon Role",
                  "default": "CUSTOMER"
              }
          },
          "DepAcctId": {
              "name": "DepAcctId",
              "in": "header",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "6485746546"
              }
          },
          "DepAcctStatusCd": {
              "name": "DepAcctStatusCd",
              "in": "header",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "S"
              }
          },
          "DepAcctType": {
              "name": "DepAcctType",
              "in": "header",
              "description": "Required when connecting to Evertec CORE",
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "IDA"
              }
          },
          "DepAcctSectionInd": {
              "name": "DepAcctSectionInd",
              "in": "header",
              "description": "Required when connecting to Evertec CORE. Section indicator. This can take the following values\n    * C (Checking)\n    * S (Savings)\n    * R (Reserve)\n",
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "C"
              }
          },
          "DepAcctTrnAmount": {
              "name": "DepAcctTrnAmount",
              "in": "header",
              "description": "Deposit Account Transaction Amount",
              "required": true,
              "schema": {
                  "type": "number",
                  "format": "Double"
              },
              "example": 100.05
          },
          "DepAcctTrnDays": {
              "name": "DepAcctTrnDays",
              "in": "header",
              "description": "Deposit Account Transaction Days",
              "required": true,
              "schema": {
                  "type": "integer"
              },
              "example": 9
          },
          "DepBankId": {
              "name": "DepBankId",
              "in": "header",
              "description": "Deposit Account Bank Id",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "001"
          },
          "AppCode": {
              "name": "AppCode",
              "in": "header",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "DAO_PB, DAO_PD, WCR, WCR_Console, PCAS, MIBANCO, IVR, PICS, CLJ"
              }
          },
          "LastStmtDt": {
              "name": "LastStmtDt",
              "in": "header",
              "description": "Last Statement Date. This behaves as an identifier for the latest statement.",
              "schema": {
                  "$ref": "#/components/schemas/LastStmtDt"
              }
          },
          "StartDt": {
              "name": "StartDt",
              "in": "header",
              "description": "Start Date",
              "schema": {
                  "type": "string",
                  "format": "date",
                  "example": "2020-01-05"
              },
              "example": "2021-06-01"
          },
          "EndDt": {
              "name": "EndDt",
              "in": "header",
              "description": "End Date - When EndDt is provided StartDt is required",
              "schema": {
                  "type": "string",
                  "format": "date",
                  "example": "2020-10-05"
              },
              "example": "2021-06-01"
          },
          "PageNumber": {
              "name": "PageNumber",
              "in": "header",
              "description": "The number of page to request, start with 1",
              "style": "simple",
              "schema": {
                  "type": "integer",
                  "example": 1
              }
          },
          "CardNumber": {
              "name": "CardNumber",
              "in": "header",
              "description": "Debit Card Number which needs to be activated/retrieved.",
              "required": true,
              "schema": {
                  "type": "string"
              },
              "example": "9991380900004456"
          },
          "CardPIN": {
              "name": "CardPIN",
              "in": "header",
              "description": "Debit Card PIN which will be used for activation.",
              "required": true,
              "schema": {
                  "type": "string"
              },
              "example": "1234"
          },
          "CDAAcctId": {
              "name": "CDAAcctId",
              "in": "header",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "6485746546"
              }
          },
          "CDAAcctType": {
              "name": "CDAAcctType",
              "in": "header",
              "description": "Required when connecting to Evertec CORE",
              "style": "simple",
              "schema": {
                  "type": "string",
                  "example": "CDA"
              }
          },
          "Amount": {
              "name": "Amount",
              "in": "header",
              "description": "Check Amount",
              "schema": {
                  "type": "number"
              },
              "example": 100.05
          },
          "ChkNum": {
              "name": "ChkNum",
              "in": "header",
              "description": "This Parameter is used for searching a specific check number (Single check number)Note - Either CheckRange or CheckNumber needs to be used, not both",
              "schema": {
                  "type": "string"
              }
          },
          "CreateRefId": {
              "name": "CreateRefId",
              "in": "header",
              "description": "Approval ID /Refernce No. generated for StopCHkAdd",
              "schema": {
                  "type": "string"
              },
              "example": "2227111638210"
          },
          "Requestor": {
              "name": "Requestor",
              "in": "header",
              "description": "Name of person requesting the stop payment.",
              "schema": {
                  "type": "string"
              },
              "example": "TEST"
          },
          "WaiveChgCd": {
              "name": "WaiveChgCd",
              "in": "header",
              "description": "Waive Charge code Sample values are Spaces,\"W\",etc..",
              "schema": {
                  "type": "string"
              },
              "example": "W"
          },
          "RenewalCt": {
              "name": "RenewalCt",
              "in": "header",
              "description": "Renewal counter  If given with a valid value , Renewal Date will be returned in the resposne",
              "schema": {
                  "type": "string"
              },
              "example": "1"
          },
          "Desc": {
              "name": "Desc",
              "in": "header",
              "description": "Reason given during the STOP check was placed",
              "schema": {
                  "type": "string"
              },
              "example": "TESTING"
          },
          "Name": {
              "name": "Name",
              "in": "header",
              "description": "Payee Id/Name",
              "schema": {
                  "type": "string"
              },
              "example": "Payee"
          },
          "OrigDt": {
              "name": "OrigDt",
              "in": "header",
              "description": "Check Origination Date. The date on which the customer  originates the check.",
              "schema": {
                  "type": "string",
                  "format": "date"
              },
              "example": "2022-09-28"
          },
          "CardAcctId": {
              "name": "CardAcctId",
              "in": "header",
              "description": "Card Account Id",
              "schema": {
                  "type": "string"
              },
              "example": "4549257500230905"
          },
          "CardAcctType": {
              "name": "CardAcctType",
              "in": "header",
              "description": "Card account type",
              "schema": {
                  "type": "string"
              },
              "example": "CARD"
          },
          "CardPANId": {
              "name": "CardPANId",
              "in": "header",
              "description": "CardPANId",
              "schema": {
                  "type": "string"
              },
              "example": "4549257500230905"
          },
          "x-idem-key": {
              "name": "x-idem-key",
              "in": "header",
              "description": "Unique key allowing clinet to make same call repeatedly while producing the same result.",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "12345"
          },
          "TaxId": {
              "name": "TaxId",
              "in": "header",
              "description": "Customer Tax Identifier",
              "schema": {
                  "type": "string"
              },
              "example": "515886664"
          },
          "DepAcctNumber": {
              "name": "DepAcctNumber",
              "in": "header",
              "description": "Deposit Account Number",
              "schema": {
                  "type": "string"
              },
              "example": "0215020183404017"
          },
          "POSAgentId": {
              "name": "POSAgentId",
              "in": "header",
              "description": "Agent ID (Requestor ID)",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "PR49171"
          },
          "POSAgentType": {
              "name": "POSAgentType",
              "in": "header",
              "description": "Captures the origin of transaction.",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "XWAA"
          },
          "TrnOwnerFuncCd": {
              "name": "TrnOwnerFuncCd",
              "in": "header",
              "description": "Function code - which backend program has been called in the backend Sent by Channel",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "06"
          },
          "TrnOwnerSubFuncCd": {
              "name": "TrnOwnerSubFuncCd",
              "in": "header",
              "description": "Sub- Function code - which Sub-function has been called in the backend Sent by Channel",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": ""
          },
          "BranchId": {
              "name": "BranchId",
              "in": "header",
              "description": "Branch Id",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "27"
          },
          "ControlReasonId": {
              "name": "ControlReasonId",
              "in": "header",
              "description": "Control reason id to be removed from an account",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "4"
          },
          "ControlReasonOccurance": {
              "name": "ControlReasonOccurance",
              "in": "header",
              "description": "Valid occurance of the control reason that needs to be removed.",
              "required": true,
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "3"
          },
          "StopCheckRefId": {
              "name": "StopCheckRefId",
              "in": "header",
              "description": "Reference Id - when the Stop Payment is added",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": "23958676739"
          },
          "TicketCIMSKey": {
              "name": "TicketCIMSKey",
              "in": "header",
              "description": "Deposit Ticket CIMS Key",
              "required": true,
              "schema": {
                  "type": "string"
              },
              "example": "202101248500095513"
          },
          "PrefMessageStatusCd": {
              "name": "PrefMessageStatusCd",
              "in": "header",
              "description": "IDA Statement Preference Message send/receive Code. Possible values to be sent by the channel are 01 - Send and 00 - Receive",
              "required": true,
              "schema": {
                  "type": "string"
              },
              "example": "00"
          },
          "RecCount": {
              "name": "RecCount",
              "in": "header",
              "description": "Record Count to be generated",
              "required": true,
              "schema": {
                  "type": "string"
              },
              "example": "50"
          },
          "HoldDt": {
              "name": "HoldDt",
              "in": "header",
              "description": "Date when hold is placed",
              "required": false,
              "schema": {
                  "type": "string"
              },
              "example": "2023-03-27"
          },
          "HoldTime": {
              "name": "HoldTime",
              "in": "header",
              "description": "Time when hold is placed",
              "required": false,
              "schema": {
                  "type": "string"
              },
              "example": "10:35:45"
          },
          "HoldReferenceId": {
              "name": "HoldReferenceId",
              "in": "header",
              "description": "Transaction component number or Hold Reference Number when hold was placed in past.",
              "required": false,
              "schema": {
                  "type": "string"
              },
              "example": "12345678"
          },
          "OfficerId": {
              "name": "OfficerId",
              "in": "header",
              "description": "This is usually the officer number but also is used with a fixed value to identify if the hold was placed by the system.",
              "required": false,
              "schema": {
                  "type": "string"
              },
              "example": "23156"
          },
          "AuthAgentId": {
              "name": "AuthAgentId",
              "in": "header",
              "description": "User Id of the person authorizing the transaction",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": 47749
          },
          "AssistanceCodeId": {
              "name": "AssistanceCodeId",
              "in": "header",
              "description": "Assistance Code Id - Used to assign the Fraud responsible team",
              "style": "simple",
              "schema": {
                  "type": "string"
              },
              "example": 1
          }
      },
      "requestBodies": {
          "GenerateAcctNumRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/GenerateAcctNumRequest"
                      }
                  }
              },
              "required": true
          },
          "CurrentAccountInitiateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/CurrentAccountInitiateRequest"
                      }
                  }
              },
              "required": true
          },
          "GenerateDeviceNumRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/GenerateDeviceNumRequest"
                      }
                  }
              },
              "required": true
          },
          "IssuedDeviceInitiateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/IssuedDeviceInitiateRequest"
                      }
                  }
              },
              "required": true
          },
          "StopCheckPaymentRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/StopCheckPaymentRequest"
                      }
                  }
              },
              "required": true
          },
          "RevStopCheckPaymentRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/RevStopCheckPaymentRequest"
                      }
                  }
              },
              "required": true
          },
          "XferPaymentRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/XferPaymentRequest"
                      }
                  }
              },
              "required": true
          },
          "AccountESignRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/AccountESignRequest"
                      }
                  }
              },
              "required": true
          },
          "AccountInterestEvaluateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/AccountInterestEvaluateRequest"
                      }
                  }
              },
              "required": true
          },
          "AccountAdjustmentInitiateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/AccountAdjustmentInitiateRequest"
                      }
                  }
              },
              "required": true
          },
          "TransactionTypeNoPostUpdateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/TransactionTypeNoPostUpdateRequest"
                      }
                  }
              },
              "required": true
          },
          "AccountControlReasonInitiateRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/AccountControlReasonInitiateRequest"
                      }
                  }
              },
              "required": true
          },
          "ControlIDAStatementDeliveryMethodIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ControlIDAStatementDeliveryMethodIFXRequest"
                      }
                  }
              },
              "required": true
          },
          "UpdateAccountConfigurationIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/UpdateAccountConfigurationIFXRequest"
                      }
                  }
              }
          },
          "InitiateDepAcctAdminHoldIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/InitiateDepAcctAdminHoldIFXRequest"
                      }
                  }
              }
          },
          "UpdateIDAStatementDeliveryMethodIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/UpdateIDAStatementDeliveryMethodIFXRequest"
                      }
                  }
              }
          },
          "InitiateIDAAccountIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/InitiateIDAAccountIFXRequest"
                      }
                  }
              }
          },
          "ControlDepAcctAdminHoldIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ControlDepAcctAdminHoldIFXRequest"
                      }
                  }
              }
          },
          "InitiateRegularHoldFinancialTransactionIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/InitiateRegularHoldFinancialTransactionIFXRequest"
                      }
                  }
              }
          },
          "ControlRegularHoldFinancialTransactionIFXRequest": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ControlRegularHoldFinancialTransactionIFXRequest"
                      }
                  }
              }
          }
      }
  }
}